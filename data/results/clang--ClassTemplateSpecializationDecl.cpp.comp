COMPLETION: Access : [#unsigned int#]Access
COMPLETION: AccessDeclContextSanity : [#bool#]AccessDeclContextSanity()[# const#]
COMPLETION: AccessSpec : [#clang::Decl::Kind#]AccessSpec
COMPLETION: add : [#void#]add(<#Kind k#>)
COMPLETION: addAttr : [#void#]addAttr(<#Attr *A#>)
COMPLETION: addDecl : [#void#]addDecl(<#Decl *D#>)
COMPLETION: addDeclInternal : [#void#]addDeclInternal(<#Decl *D#>)
COMPLETION: addedClassSubobject : [#void#]addedClassSubobject(<#CXXRecordDecl *Base#>)
COMPLETION: addedMember : [#void#]addedMember(<#Decl *D#>)
COMPLETION: addHiddenDecl : [#void#]addHiddenDecl(<#Decl *D#>)
COMPLETION: all_lookups_iterator : all_lookups_iterator
COMPLETION: allowConstDefaultInit : [#bool#]allowConstDefaultInit()[# const#]
COMPLETION: anchor : [#void#]anchor()
COMPLETION: anchor (Hidden) : [#void#]clang::NamedDecl::anchor()
COMPLETION: AnonymousStructOrUnion : [#bool#]AnonymousStructOrUnion
COMPLETION: attr_begin : [#attr_iterator#]attr_begin()[# const#]
COMPLETION: attr_end : [#attr_iterator#]attr_end()[# const#]
COMPLETION: attr_iterator : attr_iterator
COMPLETION: attr_range : attr_range
COMPLETION: attrs : [#attr_range#]attrs()[# const#]
COMPLETION: base_class_const_iterator : base_class_const_iterator
COMPLETION: base_class_const_range : base_class_const_range
COMPLETION: base_class_iterator : base_class_iterator
COMPLETION: base_class_range : base_class_range
COMPLETION: BaseMatchesCallback : BaseMatchesCallback
COMPLETION: bases : [#base_class_range#]bases()
COMPLETION: bases : [#base_class_const_range#]bases()[# const#]
COMPLETION: bases_begin : [#base_class_iterator#]bases_begin()
COMPLETION: bases_begin : [#base_class_const_iterator#]bases_begin()[# const#]
COMPLETION: bases_end : [#base_class_iterator#]bases_end()
COMPLETION: bases_end : [#base_class_const_iterator#]bases_end()[# const#]
COMPLETION: Binding : [#clang::Decl::Kind#]Binding
COMPLETION: Block : [#clang::Decl::Kind#]Block
COMPLETION: BraceRange : [#SourceRange#]BraceRange
COMPLETION: BuildDeclChain : [#std::pair<Decl *, Decl *>#]BuildDeclChain(<#ArrayRef<Decl *> Decls#>, <#bool FieldsAlreadyLoaded#>)
COMPLETION: buildLookup : [#StoredDeclsMap *#]buildLookup()
COMPLETION: buildLookupImpl : [#void#]buildLookupImpl(<#DeclContext *DCtx#>, <#bool Internal#>)
COMPLETION: BuiltinTemplate : [#clang::Decl::Kind#]BuiltinTemplate
COMPLETION: CacheValidAndLinkage : [#unsigned int#]CacheValidAndLinkage
COMPLETION: calculateInheritanceModel : [#MSInheritanceAttr::Spelling#]calculateInheritanceModel()[# const#]
COMPLETION: canBeWeakImported : [#bool#]canBeWeakImported(<#bool &IsDefinition#>)[# const#]
COMPLETION: canPassInRegisters : [#bool#]canPassInRegisters()[# const#]
COMPLETION: capture_const_iterator : capture_const_iterator
COMPLETION: capture_const_range : capture_const_range
COMPLETION: Captured : [#clang::Decl::Kind#]Captured
COMPLETION: captures : [#capture_const_range#]captures()[# const#]
COMPLETION: captures_begin : [#capture_const_iterator#]captures_begin()[# const#]
COMPLETION: captures_end : [#capture_const_iterator#]captures_end()[# const#]
COMPLETION: castFromDeclContext : [#TagDecl *#]castFromDeclContext(<#const DeclContext *DC#>)
COMPLETION: castFromDeclContext (Hidden) : [#Decl *#]clang::Decl::castFromDeclContext(<#const DeclContext *#>)
COMPLETION: castToDeclContext : [#DeclContext *#]castToDeclContext(<#const TagDecl *D#>)
COMPLETION: castToDeclContext (Hidden) : [#DeclContext *#]clang::Decl::castToDeclContext(<#const Decl *#>)
COMPLETION: classof : [#bool#]classof(<#const Decl *D#>)
COMPLETION: classof (Hidden) : [#bool#]clang::CXXRecordDecl::classof(<#const Decl *D#>)
COMPLETION: classof (Hidden) : [#bool#]clang::RecordDecl::classof(<#const Decl *D#>)
COMPLETION: classof (Hidden) : [#bool#]clang::TagDecl::classof(<#const Decl *D#>)
COMPLETION: classof (Hidden) : [#bool#]clang::TypeDecl::classof(<#const Decl *D#>)
COMPLETION: classof (Hidden) : [#bool#]clang::NamedDecl::classof(<#const Decl *D#>)
COMPLETION: classof (Hidden) : [#bool#]clang::DeclContext::classof(<#const Decl *D#>)
COMPLETION: classof (Hidden) : [#bool#]clang::DeclContext::classof(<#const DeclContext *D#>)
COMPLETION: classofKind : [#bool#]classofKind(<#Kind K#>)
COMPLETION: classofKind (Hidden) : [#bool#]clang::CXXRecordDecl::classofKind(<#Kind K#>)
COMPLETION: classofKind (Hidden) : [#bool#]clang::RecordDecl::classofKind(<#Kind K#>)
COMPLETION: classofKind (Hidden) : [#bool#]clang::TagDecl::classofKind(<#Kind K#>)
COMPLETION: classofKind (Hidden) : [#bool#]clang::TypeDecl::classofKind(<#Kind K#>)
COMPLETION: classofKind (Hidden) : [#bool#]clang::NamedDecl::classofKind(<#Kind K#>)
COMPLETION: classofKind (Hidden) : [#bool#]clang::Decl::classofKind(<#Kind K#>)
COMPLETION: ClassScopeFunctionSpecialization : [#clang::Decl::Kind#]ClassScopeFunctionSpecialization
COMPLETION: ClassTemplate : [#clang::Decl::Kind#]ClassTemplate
COMPLETION: ClassTemplatePartialSpecialization : [#clang::Decl::Kind#]ClassTemplatePartialSpecialization
COMPLETION: ClassTemplateSpecialization : [#clang::Decl::Kind#]ClassTemplateSpecialization
COMPLETION: ClassTemplateSpecializationDecl : ClassTemplateSpecializationDecl
COMPLETION: collectAllContexts : [#void#]collectAllContexts(<#SmallVectorImpl<DeclContext *> &Contexts#>)
COMPLETION: completeDefinition : [#void#]completeDefinition()
COMPLETION: completeDefinition : [#void#]completeDefinition(<#CXXFinalOverriderMap *FinalOverriders#>)
COMPLETION: completeDefinition (Hidden) : [#void#]clang::RecordDecl::completeDefinition()
COMPLETION: completeDefinition (Hidden) : [#void#]clang::TagDecl::completeDefinition()
COMPLETION: ConstructorUsingShadow : [#clang::Decl::Kind#]ConstructorUsingShadow
COMPLETION: containsDecl : [#bool#]containsDecl(<#Decl *D#>)[# const#]
COMPLETION: conversion_begin : [#conversion_iterator#]conversion_begin()[# const#]
COMPLETION: conversion_end : [#conversion_iterator#]conversion_end()[# const#]
COMPLETION: conversion_iterator : conversion_iterator
COMPLETION: Create : [#ClassTemplateSpecializationDecl *#]Create(<#ASTContext &Context#>, <#TagKind TK#>, <#DeclContext *DC#>, <#SourceLocation StartLoc#>, <#SourceLocation IdLoc#>, <#ClassTemplateDecl *SpecializedTemplate#>, <#ArrayRef<TemplateArgument> Args#>, <#ClassTemplateSpecializationDecl *PrevDecl#>)
COMPLETION: Create (Hidden) : [#CXXRecordDecl *#]clang::CXXRecordDecl::Create(<#const ASTContext &C#>, <#TagKind TK#>, <#DeclContext *DC#>, <#SourceLocation StartLoc#>, <#SourceLocation IdLoc#>, <#IdentifierInfo *Id#>{#, <#CXXRecordDecl *PrevDecl = nullptr#>{#, <#bool DelayTypeCreation = false#>#}#})
COMPLETION: Create (Hidden) : [#RecordDecl *#]clang::RecordDecl::Create(<#const ASTContext &C#>, <#TagKind TK#>, <#DeclContext *DC#>, <#SourceLocation StartLoc#>, <#SourceLocation IdLoc#>, <#IdentifierInfo *Id#>{#, <#RecordDecl *PrevDecl = nullptr#>#})
COMPLETION: CreateDeserialized : [#ClassTemplateSpecializationDecl *#]CreateDeserialized(<#ASTContext &C#>, <#unsigned int ID#>)
COMPLETION: CreateDeserialized (Hidden) : [#CXXRecordDecl *#]clang::CXXRecordDecl::CreateDeserialized(<#const ASTContext &C#>, <#unsigned int ID#>)
COMPLETION: CreateDeserialized (Hidden) : [#RecordDecl *#]clang::RecordDecl::CreateDeserialized(<#const ASTContext &C#>, <#unsigned int ID#>)
COMPLETION: CreateLambda : [#CXXRecordDecl *#]CreateLambda(<#const ASTContext &C#>, <#DeclContext *DC#>, <#TypeSourceInfo *Info#>, <#SourceLocation Loc#>, <#bool DependentLambda#>, <#bool IsGeneric#>, <#LambdaCaptureDefault CaptureDefault#>)
COMPLETION: CreateStoredDeclsMap : [#StoredDeclsMap *#]CreateStoredDeclsMap(<#ASTContext &C#>)[# const#]
COMPLETION: ctor_begin : [#ctor_iterator#]ctor_begin()[# const#]
COMPLETION: ctor_end : [#ctor_iterator#]ctor_end()[# const#]
COMPLETION: ctor_iterator : ctor_iterator
COMPLETION: ctor_range : ctor_range
COMPLETION: ctors : [#ctor_range#]ctors()[# const#]
COMPLETION: CXXConstructor : [#clang::Decl::Kind#]CXXConstructor
COMPLETION: CXXConversion : [#clang::Decl::Kind#]CXXConversion
COMPLETION: CXXDeductionGuide : [#clang::Decl::Kind#]CXXDeductionGuide
COMPLETION: CXXDestructor : [#clang::Decl::Kind#]CXXDestructor
COMPLETION: CXXMethod : [#clang::Decl::Kind#]CXXMethod
COMPLETION: CXXRecord : [#clang::Decl::Kind#]CXXRecord
COMPLETION: CXXRecordDecl : CXXRecordDecl
COMPLETION: data : [#struct DefinitionData &#]data()[# const#]
COMPLETION: dataPtr : [#struct DefinitionData *#]dataPtr()[# const#]
COMPLETION: ddiag_iterator : ddiag_iterator
COMPLETION: ddiag_range : ddiag_range
COMPLETION: ddiags : [#DeclContext::ddiag_range#]ddiags()[# const#]
COMPLETION: Decl : Decl
COMPLETION: decl_iterator : decl_iterator
COMPLETION: decl_range : decl_range
COMPLETION: declarationReplaces : [#bool#]declarationReplaces(<#NamedDecl *OldD#>{#, <#bool IsKnownNewer = true#>#})[# const#]
COMPLETION: DeclContext : DeclContext
COMPLETION: DeclCtx : [#llvm::PointerUnion<DeclContext *, MultipleDC *>#]DeclCtx
COMPLETION: DeclKind : [#unsigned int#]DeclKind
COMPLETION: DeclKind : [#unsigned int#]DeclKind
COMPLETION: DeclLink : DeclLink
COMPLETION: decls : [#decl_range#]decls()[# const#]
COMPLETION: decls_begin : [#decl_iterator#]decls_begin()[# const#]
COMPLETION: decls_empty : [#bool#]decls_empty()[# const#]
COMPLETION: decls_end : [#decl_iterator#]decls_end()[# const#]
COMPLETION: Decomposition : [#clang::Decl::Kind#]Decomposition
COMPLETION: defaultedCopyConstructorIsDeleted : [#bool#]defaultedCopyConstructorIsDeleted()[# const#]
COMPLETION: defaultedDefaultConstructorIsConstexpr : [#bool#]defaultedDefaultConstructorIsConstexpr()[# const#]
COMPLETION: defaultedDestructorIsDeleted : [#bool#]defaultedDestructorIsDeleted()[# const#]
COMPLETION: defaultedMoveConstructorIsDeleted : [#bool#]defaultedMoveConstructorIsDeleted()[# const#]
COMPLETION: DefinitionData : [#struct DefinitionData *#]DefinitionData
COMPLETION: dropAttr : [#void#]dropAttr<<#typename T#>>()
COMPLETION: dropAttrs : [#void#]dropAttrs()
COMPLETION: dump : [#void#]dump()[# const#]
COMPLETION: dump : [#void#]dump(<#raw_ostream &Out#>{#, <#bool Deserialize = false#>#})[# const#]
COMPLETION: dumpColor : [#void#]dumpColor()[# const#]
COMPLETION: dumpDeclContext : [#void#]dumpDeclContext()[# const#]
COMPLETION: dumpLookups : [#void#]dumpLookups()[# const#]
COMPLETION: dumpLookups : [#void#]dumpLookups(<#llvm::raw_ostream &OS#>{#, <#bool DumpDecls = false#>{#, <#bool Deserialize = false#>#}#})[# const#]
COMPLETION: Empty : [#clang::Decl::Kind#]Empty
COMPLETION: EmptyShell : EmptyShell
COMPLETION: EnableStatistics : [#void#]EnableStatistics()
COMPLETION: Encloses : [#bool#]Encloses(<#const DeclContext *DC#>)[# const#]
COMPLETION: Enum : [#clang::Decl::Kind#]Enum
COMPLETION: EnumConstant : [#clang::Decl::Kind#]EnumConstant
COMPLETION: Equals : [#bool#]Equals(<#const DeclContext *DC#>)[# const#]
COMPLETION: ExplicitInfo : [#ExplicitSpecializationInfo *#]ExplicitInfo
COMPLETION: ExplicitSpecializationInfo : ExplicitSpecializationInfo
COMPLETION: ExplicitVisibilityKind : ExplicitVisibilityKind
COMPLETION: Export : [#clang::Decl::Kind#]Export
COMPLETION: ExternalLexicalStorage : [#bool#]ExternalLexicalStorage
COMPLETION: ExternalVisibleStorage : [#bool#]ExternalVisibleStorage
COMPLETION: ExternCContext : [#clang::Decl::Kind#]ExternCContext
COMPLETION: ExtInfo : ExtInfo
COMPLETION: Field : [#clang::Decl::Kind#]Field
COMPLETION: field_begin : [#field_iterator#]field_begin()[# const#]
COMPLETION: field_empty : [#bool#]field_empty()[# const#]
COMPLETION: field_end : [#field_iterator#]field_end()[# const#]
COMPLETION: field_iterator : field_iterator
COMPLETION: field_range : field_range
COMPLETION: fields : [#field_range#]fields()[# const#]
COMPLETION: FileScopeAsm : [#clang::Decl::Kind#]FileScopeAsm
COMPLETION: filtered_decl_iterator : filtered_decl_iterator<<#typename SpecificDecl#>, <#bool (SpecificDecl::*Acceptable)() const#>>
COMPLETION: FindBaseClass : [#bool#]FindBaseClass(<#const CXXBaseSpecifier *Specifier#>, <#CXXBasePath &Path#>, <#const CXXRecordDecl *BaseRecord#>)
COMPLETION: findFirstNamedDataMember : [#const FieldDecl *#]findFirstNamedDataMember()[# const#]
COMPLETION: FindNestedNameSpecifierMember : [#bool#]FindNestedNameSpecifierMember(<#const CXXBaseSpecifier *Specifier#>, <#CXXBasePath &Path#>, <#DeclarationName Name#>)
COMPLETION: FindOMPReductionMember : [#bool#]FindOMPReductionMember(<#const CXXBaseSpecifier *Specifier#>, <#CXXBasePath &Path#>, <#DeclarationName Name#>)
COMPLETION: FindOrdinaryMember : [#bool#]FindOrdinaryMember(<#const CXXBaseSpecifier *Specifier#>, <#CXXBasePath &Path#>, <#DeclarationName Name#>)
COMPLETION: FindOrdinaryMemberInDependentClasses : [#bool#]FindOrdinaryMemberInDependentClasses(<#const CXXBaseSpecifier *Specifier#>, <#CXXBasePath &Path#>, <#DeclarationName Name#>)
COMPLETION: FindTagMember : [#bool#]FindTagMember(<#const CXXBaseSpecifier *Specifier#>, <#CXXBasePath &Path#>, <#DeclarationName Name#>)
COMPLETION: FindVirtualBaseClass : [#bool#]FindVirtualBaseClass(<#const CXXBaseSpecifier *Specifier#>, <#CXXBasePath &Path#>, <#const CXXRecordDecl *BaseRecord#>)
COMPLETION: finishedDefaultedOrDeletedMember : [#void#]finishedDefaultedOrDeletedMember(<#CXXMethodDecl *MD#>)
COMPLETION: First : [#TagDecl *#]First
COMPLETION: firstClassTemplateSpecialization : [#clang::Decl::Kind#]firstClassTemplateSpecialization
COMPLETION: firstCXXMethod : [#clang::Decl::Kind#]firstCXXMethod
COMPLETION: firstCXXRecord : [#clang::Decl::Kind#]firstCXXRecord
COMPLETION: FirstDecl : [#Decl *#]FirstDecl
COMPLETION: firstDecl : [#clang::Decl::Kind#]firstDecl
COMPLETION: firstDeclarator : [#clang::Decl::Kind#]firstDeclarator
COMPLETION: firstField : [#clang::Decl::Kind#]firstField
COMPLETION: firstFunction : [#clang::Decl::Kind#]firstFunction
COMPLETION: firstNamed : [#clang::Decl::Kind#]firstNamed
COMPLETION: firstObjCContainer : [#clang::Decl::Kind#]firstObjCContainer
COMPLETION: firstObjCImpl : [#clang::Decl::Kind#]firstObjCImpl
COMPLETION: firstRecord : [#clang::Decl::Kind#]firstRecord
COMPLETION: firstRedeclarableTemplate : [#clang::Decl::Kind#]firstRedeclarableTemplate
COMPLETION: firstTag : [#clang::Decl::Kind#]firstTag
COMPLETION: firstTemplate : [#clang::Decl::Kind#]firstTemplate
COMPLETION: firstType : [#clang::Decl::Kind#]firstType
COMPLETION: firstTypedefName : [#clang::Decl::Kind#]firstTypedefName
COMPLETION: firstUsingShadow : [#clang::Decl::Kind#]firstUsingShadow
COMPLETION: firstValue : [#clang::Decl::Kind#]firstValue
COMPLETION: firstVar : [#clang::Decl::Kind#]firstVar
COMPLETION: firstVarTemplateSpecialization : [#clang::Decl::Kind#]firstVarTemplateSpecialization
COMPLETION: FOK_Declared : [#clang::Decl::FriendObjectKind#]FOK_Declared
COMPLETION: FOK_None : [#clang::Decl::FriendObjectKind#]FOK_None
COMPLETION: FOK_Undeclared : [#clang::Decl::FriendObjectKind#]FOK_Undeclared
COMPLETION: forallBases : [#bool#]forallBases(<#ForallBasesCallback BaseMatches#>{#, <#bool AllowShortCircuit = true#>#})[# const#]
COMPLETION: ForallBasesCallback : ForallBasesCallback
COMPLETION: Friend : [#clang::Decl::Kind#]Friend
COMPLETION: friend_begin : [#CXXRecordDecl::friend_iterator#]friend_begin()[# const#]
COMPLETION: friend_end : [#CXXRecordDecl::friend_iterator#]friend_end()[# const#]
COMPLETION: friend_iterator : friend_iterator
COMPLETION: friend_range : friend_range
COMPLETION: FriendObjectKind : FriendObjectKind
COMPLETION: friends : [#CXXRecordDecl::friend_range#]friends()[# const#]
COMPLETION: FriendTemplate : [#clang::Decl::Kind#]FriendTemplate
COMPLETION: FromASTFile : [#unsigned int#]FromASTFile
COMPLETION: Function : [#clang::Decl::Kind#]Function
COMPLETION: FunctionTemplate : [#clang::Decl::Kind#]FunctionTemplate
COMPLETION: getAccess : [#AccessSpecifier#]getAccess()[# const#]
COMPLETION: getAccessUnsafe : [#AccessSpecifier#]getAccessUnsafe()[# const#]
COMPLETION: getAsFunction : [#FunctionDecl *#]getAsFunction()
COMPLETION: getAsFunction : [#const FunctionDecl *#]getAsFunction()[# const#]
COMPLETION: getASTContext : [#ASTContext &#]getASTContext()[# const#]
COMPLETION: getASTMutationListener : [#ASTMutationListener *#]getASTMutationListener()[# const#]
COMPLETION: getAttr : [#T *#]getAttr<<#typename T#>>()[# const#]
COMPLETION: getAttrs : [#AttrVec &#]getAttrs()
COMPLETION: getAttrs : [#const AttrVec &#]getAttrs()[# const#]
COMPLETION: getAvailability : [#AvailabilityResult#]getAvailability({#<#std::string *Message = nullptr#>{#, <#VersionTuple EnclosingVersion = VersionTuple()#>#}#})[# const#]
COMPLETION: getBody : [#Stmt *#]getBody()[# const#]
COMPLETION: getBodyRBrace : [#SourceLocation#]getBodyRBrace()[# const#]
COMPLETION: getBraceRange : [#SourceRange#]getBraceRange()[# const#]
COMPLETION: getCachedLinkage : [#Linkage#]getCachedLinkage()[# const#]
COMPLETION: getCanonicalDecl : [#CXXRecordDecl *#]getCanonicalDecl()
COMPLETION: getCanonicalDecl : [#const CXXRecordDecl *#]getCanonicalDecl()[# const#]
COMPLETION: getCanonicalDecl (Hidden) : [#TagDecl *#]clang::TagDecl::getCanonicalDecl()
COMPLETION: getCanonicalDecl (Hidden) : [#const TagDecl *#]clang::TagDecl::getCanonicalDecl()[# const#]
COMPLETION: getCanonicalDecl (Hidden) : [#Decl *#]clang::Decl::getCanonicalDecl()
COMPLETION: getCanonicalDecl (Hidden) : [#const Decl *#]clang::Decl::getCanonicalDecl()[# const#]
COMPLETION: getCaptureFields : [#void#]getCaptureFields(<#llvm::DenseMap<const VarDecl *, FieldDecl *> &Captures#>, <#FieldDecl *&ThisCapture#>)[# const#]
COMPLETION: getDeclContext : [#DeclContext *#]getDeclContext()
COMPLETION: getDeclContext : [#const DeclContext *#]getDeclContext()[# const#]
COMPLETION: getDeclKind : [#Decl::Kind#]getDeclKind()[# const#]
COMPLETION: getDeclKindName : [#const char *#]getDeclKindName()[# const#]
COMPLETION: getDeclKindName : [#const char *#]getDeclKindName()[# const#]
COMPLETION: getDeclName : [#DeclarationName#]getDeclName()[# const#]
COMPLETION: getDefiningAttr : [#const Attr *#]getDefiningAttr()[# const#]
COMPLETION: getDefinition : [#CXXRecordDecl *#]getDefinition()[# const#]
COMPLETION: getDefinition (Hidden) : [#RecordDecl *#]clang::RecordDecl::getDefinition()[# const#]
COMPLETION: getDefinition (Hidden) : [#TagDecl *#]clang::TagDecl::getDefinition()[# const#]
COMPLETION: getDescribedClassTemplate : [#ClassTemplateDecl *#]getDescribedClassTemplate()[# const#]
COMPLETION: getDescribedTemplate : [#TemplateDecl *#]getDescribedTemplate()[# const#]
COMPLETION: getDestructor : [#CXXDestructorDecl *#]getDestructor()[# const#]
COMPLETION: getEnclosingNamespaceContext : [#DeclContext *#]getEnclosingNamespaceContext()
COMPLETION: getEnclosingNamespaceContext : [#const DeclContext *#]getEnclosingNamespaceContext()[# const#]
COMPLETION: getExplicitVisibility : [#Optional<Visibility>#]getExplicitVisibility(<#ExplicitVisibilityKind kind#>)[# const#]
COMPLETION: getExternalSourceSymbolAttr : [#ExternalSourceSymbolAttr *#]getExternalSourceSymbolAttr()[# const#]
COMPLETION: getExternCContext : [#const LinkageSpecDecl *#]getExternCContext()[# const#]
COMPLETION: getExternLoc : [#SourceLocation#]getExternLoc()[# const#]
COMPLETION: getExtInfo : [#ExtInfo *#]getExtInfo()
COMPLETION: getExtInfo : [#const ExtInfo *#]getExtInfo()[# const#]
COMPLETION: getFinalOverriders : [#void#]getFinalOverriders(<#CXXFinalOverriderMap &FinaOverriders#>)[# const#]
COMPLETION: getFirstDecl : [#TagDecl *#]getFirstDecl()
COMPLETION: getFirstDecl : [#const TagDecl *#]getFirstDecl()[# const#]
COMPLETION: getFirstFriend : [#FriendDecl *#]getFirstFriend()[# const#]
COMPLETION: getFormalLinkage : [#Linkage#]getFormalLinkage()[# const#]
COMPLETION: getFriendObjectKind : [#FriendObjectKind#]getFriendObjectKind()[# const#]
COMPLETION: getFunctionType : [#const FunctionType *#]getFunctionType({#<#bool BlocksToo = true#>#})[# const#]
COMPLETION: getGenericLambdaTemplateParameterList : [#TemplateParameterList *#]getGenericLambdaTemplateParameterList()[# const#]
COMPLETION: getGlobalID : [#unsigned int#]getGlobalID()[# const#]
COMPLETION: getIdentifier : [#IdentifierInfo *#]getIdentifier()[# const#]
COMPLETION: getIdentifierNamespace : [#unsigned int#]getIdentifierNamespace()[# const#]
COMPLETION: getIdentifierNamespaceForKind : [#unsigned int#]getIdentifierNamespaceForKind(<#Kind DK#>)
COMPLETION: getImportedOwningModule : [#Module *#]getImportedOwningModule()[# const#]
COMPLETION: getIndirectPrimaryBases : [#void#]getIndirectPrimaryBases(<#CXXIndirectPrimaryBaseSet &Bases#>)[# const#]
COMPLETION: getInnerLocStart : [#SourceLocation#]getInnerLocStart()[# const#]
COMPLETION: getInstantiatedFrom : [#llvm::PointerUnion<ClassTemplateDecl *, ClassTemplatePartialSpecializationDecl *>#]getInstantiatedFrom()[# const#]
COMPLETION: getInstantiatedFromMemberClass : [#CXXRecordDecl *#]getInstantiatedFromMemberClass()[# const#]
COMPLETION: getKind : [#Kind#]getKind()[# const#]
COMPLETION: getKindName : [#StringRef#]getKindName()[# const#]
COMPLETION: getLambdaCallOperator : [#CXXMethodDecl *#]getLambdaCallOperator()[# const#]
COMPLETION: getLambdaCaptureDefault : [#LambdaCaptureDefault#]getLambdaCaptureDefault()[# const#]
COMPLETION: getLambdaContextDecl : [#Decl *#]getLambdaContextDecl()[# const#]
COMPLETION: getLambdaData : [#struct LambdaDefinitionData &#]getLambdaData()[# const#]
COMPLETION: getLambdaManglingNumber : [#unsigned int#]getLambdaManglingNumber()[# const#]
COMPLETION: getLambdaStaticInvoker : [#CXXMethodDecl *#]getLambdaStaticInvoker()[# const#]
COMPLETION: getLambdaTypeInfo : [#TypeSourceInfo *#]getLambdaTypeInfo()[# const#]
COMPLETION: getLexicalDeclContext : [#DeclContext *#]getLexicalDeclContext()
COMPLETION: getLexicalDeclContext : [#const DeclContext *#]getLexicalDeclContext()[# const#]
COMPLETION: getLexicalParent : [#DeclContext *#]getLexicalParent()
COMPLETION: getLexicalParent : [#const DeclContext *#]getLexicalParent()[# const#]
COMPLETION: getLinkageAndVisibility : [#LinkageInfo#]getLinkageAndVisibility()[# const#]
COMPLETION: getLinkageInternal : [#Linkage#]getLinkageInternal()[# const#]
COMPLETION: getLocalOwningModule : [#Module *#]getLocalOwningModule()[# const#]
COMPLETION: getLocation : [#SourceLocation#]getLocation()[# const#]
COMPLETION: getLocEnd : [#SourceLocation#]getLocEnd()[# const#]
COMPLETION: getLocStart : [#SourceLocation#]getLocStart()[# const#]
COMPLETION: getLocStart (Hidden) : [#SourceLocation#]clang::Decl::getLocStart()[# const#]
COMPLETION: getLookupParent : [#DeclContext *#]getLookupParent()
COMPLETION: getLookupParent : [#const DeclContext *#]getLookupParent()[# const#]
COMPLETION: getLookupPtr : [#StoredDeclsMap *#]getLookupPtr()[# const#]
COMPLETION: getMaxAlignment : [#unsigned int#]getMaxAlignment()[# const#]
COMPLETION: getMemberSpecializationInfo : [#MemberSpecializationInfo *#]getMemberSpecializationInfo()[# const#]
COMPLETION: getModuleOwnershipKind : [#ModuleOwnershipKind#]getModuleOwnershipKind()[# const#]
COMPLETION: getModuleOwnershipKindForChildOf : [#ModuleOwnershipKind#]getModuleOwnershipKindForChildOf(<#DeclContext *DC#>)
COMPLETION: getMostRecentDecl : [#ClassTemplateSpecializationDecl *#]getMostRecentDecl()
COMPLETION: getMostRecentDecl (Hidden) : [#CXXRecordDecl *#]clang::CXXRecordDecl::getMostRecentDecl()
COMPLETION: getMostRecentDecl (Hidden) : [#const CXXRecordDecl *#]clang::CXXRecordDecl::getMostRecentDecl()[# const#]
COMPLETION: getMostRecentDecl (Hidden) : [#RecordDecl *#]clang::RecordDecl::getMostRecentDecl()
COMPLETION: getMostRecentDecl (Hidden) : [#const RecordDecl *#]clang::RecordDecl::getMostRecentDecl()[# const#]
COMPLETION: getMostRecentDecl (Hidden) : [#TagDecl *#]clang::Redeclarable<TagDecl>::getMostRecentDecl()
COMPLETION: getMostRecentDecl (Hidden) : [#const TagDecl *#]clang::Redeclarable<TagDecl>::getMostRecentDecl()[# const#]
COMPLETION: getMostRecentDecl (Hidden) : [#NamedDecl *#]clang::NamedDecl::getMostRecentDecl()
COMPLETION: getMostRecentDecl (Hidden) : [#const NamedDecl *#]clang::NamedDecl::getMostRecentDecl()[# const#]
COMPLETION: getMostRecentDecl (Hidden) : [#Decl *#]clang::Decl::getMostRecentDecl()
COMPLETION: getMostRecentDecl (Hidden) : [#const Decl *#]clang::Decl::getMostRecentDecl()[# const#]
COMPLETION: getMostRecentDeclImpl : [#TagDecl *#]getMostRecentDeclImpl()
COMPLETION: getMostRecentDeclImpl (Hidden) : [#Decl *#]clang::Decl::getMostRecentDeclImpl()
COMPLETION: getMSInheritanceModel : [#MSInheritanceAttr::Spelling#]getMSInheritanceModel()[# const#]
COMPLETION: getMSVtorDispMode : [#MSVtorDispAttr::Mode#]getMSVtorDispMode()[# const#]
COMPLETION: getMultipleDC : [#MultipleDC *#]getMultipleDC()[# const#]
COMPLETION: getName : [#StringRef#]getName()[# const#]
COMPLETION: getNameAsString : [#std::string#]getNameAsString()[# const#]
COMPLETION: getNameForDiagnostic : [#void#]getNameForDiagnostic(<#raw_ostream &OS#>, <#const PrintingPolicy &Policy#>, <#bool Qualified#>)[# const#]
COMPLETION: getNameForDiagnostic (Hidden) : [#void#]clang::NamedDecl::getNameForDiagnostic(<#raw_ostream &OS#>, <#const PrintingPolicy &Policy#>, <#bool Qualified#>)[# const#]
COMPLETION: getNextDeclInContext : [#Decl *#]getNextDeclInContext()
COMPLETION: getNextDeclInContext : [#const Decl *#]getNextDeclInContext()[# const#]
COMPLETION: getNextInBucket : [#void *#]getNextInBucket()[# const#]
COMPLETION: getNextRedeclaration : [#TagDecl *#]getNextRedeclaration()[# const#]
COMPLETION: getNextRedeclarationImpl : [#TagDecl *#]getNextRedeclarationImpl()
COMPLETION: getNextRedeclarationImpl (Hidden) : [#Decl *#]clang::Decl::getNextRedeclarationImpl()
COMPLETION: getNonClosureAncestor : [#Decl *#]getNonClosureAncestor()
COMPLETION: getNonClosureAncestor : [#const Decl *#]getNonClosureAncestor()[# const#]
COMPLETION: getNonClosureContext : [#Decl *#]getNonClosureContext()
COMPLETION: getNonClosureContext : [#const Decl *#]getNonClosureContext()[# const#]
COMPLETION: getNumBases : [#unsigned int#]getNumBases()[# const#]
COMPLETION: getNumTemplateParameterLists : [#unsigned int#]getNumTemplateParameterLists()[# const#]
COMPLETION: getNumVBases : [#unsigned int#]getNumVBases()[# const#]
COMPLETION: getObjCFStringFormattingFamily : [#ObjCStringFormatFamily#]getObjCFStringFormattingFamily()[# const#]
COMPLETION: getODRHash : [#unsigned int#]getODRHash()[# const#]
COMPLETION: getOuterLexicalRecordContext : [#RecordDecl *#]getOuterLexicalRecordContext()
COMPLETION: getOuterLexicalRecordContext : [#const RecordDecl *#]getOuterLexicalRecordContext()[# const#]
COMPLETION: getOuterLocStart : [#SourceLocation#]getOuterLocStart()[# const#]
COMPLETION: getOwningModule : [#Module *#]getOwningModule()[# const#]
COMPLETION: getOwningModuleForLinkage : [#Module *#]getOwningModuleForLinkage({#<#bool IgnoreLinkage = false#>#})[# const#]
COMPLETION: getOwningModuleID : [#unsigned int#]getOwningModuleID()[# const#]
COMPLETION: getOwningModuleSlow : [#Module *#]getOwningModuleSlow()[# const#]
COMPLETION: getParent : [#DeclContext *#]getParent()
COMPLETION: getParent : [#const DeclContext *#]getParent()[# const#]
COMPLETION: getParentASTContext : [#ASTContext &#]getParentASTContext()[# const#]
COMPLETION: getParentFunctionOrMethod : [#const DeclContext *#]getParentFunctionOrMethod()[# const#]
COMPLETION: getParentFunctionOrMethod : [#DeclContext *#]getParentFunctionOrMethod()
COMPLETION: getPointOfInstantiation : [#SourceLocation#]getPointOfInstantiation()[# const#]
COMPLETION: getPreviousDecl : [#CXXRecordDecl *#]getPreviousDecl()
COMPLETION: getPreviousDecl : [#const CXXRecordDecl *#]getPreviousDecl()[# const#]
COMPLETION: getPreviousDecl (Hidden) : [#RecordDecl *#]clang::RecordDecl::getPreviousDecl()
COMPLETION: getPreviousDecl (Hidden) : [#const RecordDecl *#]clang::RecordDecl::getPreviousDecl()[# const#]
COMPLETION: getPreviousDecl (Hidden) : [#TagDecl *#]clang::Redeclarable<TagDecl>::getPreviousDecl()
COMPLETION: getPreviousDecl (Hidden) : [#const TagDecl *#]clang::Redeclarable<TagDecl>::getPreviousDecl()[# const#]
COMPLETION: getPreviousDecl (Hidden) : [#Decl *#]clang::Decl::getPreviousDecl()
COMPLETION: getPreviousDecl (Hidden) : [#const Decl *#]clang::Decl::getPreviousDecl()[# const#]
COMPLETION: getPreviousDeclImpl : [#TagDecl *#]getPreviousDeclImpl()
COMPLETION: getPreviousDeclImpl (Hidden) : [#Decl *#]clang::Decl::getPreviousDeclImpl()
COMPLETION: getPrimaryContext : [#DeclContext *#]getPrimaryContext()
COMPLETION: getPrimaryContext : [#const DeclContext *#]getPrimaryContext()[# const#]
COMPLETION: getQualifiedNameAsString : [#std::string#]getQualifiedNameAsString()[# const#]
COMPLETION: getQualifier : [#NestedNameSpecifier *#]getQualifier()[# const#]
COMPLETION: getQualifierLoc : [#NestedNameSpecifierLoc#]getQualifierLoc()[# const#]
COMPLETION: getRedeclContext : [#DeclContext *#]getRedeclContext()
COMPLETION: getRedeclContext : [#const DeclContext *#]getRedeclContext()[# const#]
COMPLETION: getSemanticDC : [#DeclContext *#]getSemanticDC()[# const#]
COMPLETION: getSourceRange : [#SourceRange#]getSourceRange()[# const#]
COMPLETION: getSourceRange (Hidden) : [#SourceRange#]clang::TagDecl::getSourceRange()[# const#]
COMPLETION: getSourceRange (Hidden) : [#SourceRange#]clang::TypeDecl::getSourceRange()[# const#]
COMPLETION: getSourceRange (Hidden) : [#SourceRange#]clang::Decl::getSourceRange()[# const#]
COMPLETION: getSpecializationKind : [#TemplateSpecializationKind#]getSpecializationKind()[# const#]
COMPLETION: getSpecializedTemplate : [#ClassTemplateDecl *#]getSpecializedTemplate()[# const#]
COMPLETION: getSpecializedTemplateOrPartial : [#llvm::PointerUnion<ClassTemplateDecl *, ClassTemplatePartialSpecializationDecl *>#]getSpecializedTemplateOrPartial()[# const#]
COMPLETION: getTagKind : [#TagKind#]getTagKind()[# const#]
COMPLETION: getTemplateArgs : [#const TemplateArgumentList &#]getTemplateArgs()[# const#]
COMPLETION: getTemplateInstantiationArgs : [#const TemplateArgumentList &#]getTemplateInstantiationArgs()[# const#]
COMPLETION: getTemplateInstantiationPattern : [#const CXXRecordDecl *#]getTemplateInstantiationPattern()[# const#]
COMPLETION: getTemplateInstantiationPattern : [#CXXRecordDecl *#]getTemplateInstantiationPattern()
COMPLETION: getTemplateKeywordLoc : [#SourceLocation#]getTemplateKeywordLoc()[# const#]
COMPLETION: getTemplateParameterList : [#TemplateParameterList *#]getTemplateParameterList(<#unsigned int i#>)[# const#]
COMPLETION: getTemplateSpecializationKind : [#TemplateSpecializationKind#]getTemplateSpecializationKind()[# const#]
COMPLETION: getTranslationUnitDecl : [#TranslationUnitDecl *#]getTranslationUnitDecl()
COMPLETION: getTranslationUnitDecl : [#const TranslationUnitDecl *#]getTranslationUnitDecl()[# const#]
COMPLETION: getTypeAsWritten : [#TypeSourceInfo *#]getTypeAsWritten()[# const#]
COMPLETION: getTypedefNameForAnonDecl : [#TypedefNameDecl *#]getTypedefNameForAnonDecl()[# const#]
COMPLETION: getTypeForDecl : [#const Type *#]getTypeForDecl()[# const#]
COMPLETION: getUnderlyingDecl : [#NamedDecl *#]getUnderlyingDecl()
COMPLETION: getUnderlyingDecl : [#const NamedDecl *#]getUnderlyingDecl()[# const#]
COMPLETION: getUnderlyingDeclImpl : [#NamedDecl *#]getUnderlyingDeclImpl()
COMPLETION: getVersionIntroduced : [#VersionTuple#]getVersionIntroduced()[# const#]
COMPLETION: getVisibility : [#Visibility#]getVisibility()[# const#]
COMPLETION: getVisibleConversionFunctions : [#llvm::iterator_range<conversion_iterator>#]getVisibleConversionFunctions()
COMPLETION: hasAnyDependentBases : [#bool#]hasAnyDependentBases()[# const#]
COMPLETION: hasAttr : [#bool#]hasAttr<<#typename T#>>()[# const#]
COMPLETION: HasAttrs : [#unsigned int#]HasAttrs
COMPLETION: hasAttrs : [#bool#]hasAttrs()[# const#]
COMPLETION: hasBody : [#bool#]hasBody()[# const#]
COMPLETION: hasCachedLinkage : [#bool#]hasCachedLinkage()[# const#]
COMPLETION: hasConstexprDefaultConstructor : [#bool#]hasConstexprDefaultConstructor()[# const#]
COMPLETION: hasConstexprNonCopyMoveConstructor : [#bool#]hasConstexprNonCopyMoveConstructor()[# const#]
COMPLETION: hasCopyAssignmentWithConstParam : [#bool#]hasCopyAssignmentWithConstParam()[# const#]
COMPLETION: hasCopyConstructorWithConstParam : [#bool#]hasCopyConstructorWithConstParam()[# const#]
COMPLETION: hasDefaultConstructor : [#bool#]hasDefaultConstructor()[# const#]
COMPLETION: hasDefiningAttr : [#bool#]hasDefiningAttr()[# const#]
COMPLETION: hasDefinition : [#bool#]hasDefinition()[# const#]
COMPLETION: hasDirectFields : [#bool#]hasDirectFields()[# const#]
COMPLETION: hasExternalFormalLinkage : [#bool#]hasExternalFormalLinkage()[# const#]
COMPLETION: hasExternalLexicalStorage : [#bool#]hasExternalLexicalStorage()[# const#]
COMPLETION: hasExternalVisibleStorage : [#bool#]hasExternalVisibleStorage()[# const#]
COMPLETION: hasExtInfo : [#bool#]hasExtInfo()[# const#]
COMPLETION: HasFlexibleArrayMember : [#bool#]HasFlexibleArrayMember
COMPLETION: hasFlexibleArrayMember : [#bool#]hasFlexibleArrayMember()[# const#]
COMPLETION: hasFriends : [#bool#]hasFriends()[# const#]
COMPLETION: hasInClassInitializer : [#bool#]hasInClassInitializer()[# const#]
COMPLETION: hasInheritedAssignment : [#bool#]hasInheritedAssignment()[# const#]
COMPLETION: hasInheritedConstructor : [#bool#]hasInheritedConstructor()[# const#]
COMPLETION: hasIrrelevantDestructor : [#bool#]hasIrrelevantDestructor()[# const#]
COMPLETION: HasLazyExternalLexicalLookups : [#bool#]HasLazyExternalLexicalLookups
COMPLETION: HasLazyLocalLexicalLookups : [#bool#]HasLazyLocalLexicalLookups
COMPLETION: hasLinkage : [#bool#]hasLinkage()[# const#]
COMPLETION: hasLinkageBeenComputed : [#bool#]hasLinkageBeenComputed()[# const#]
COMPLETION: hasLoadedFieldsFromExternalStorage : [#bool#]hasLoadedFieldsFromExternalStorage()[# const#]
COMPLETION: hasLocalOwningModuleStorage : [#bool#]hasLocalOwningModuleStorage()[# const#]
COMPLETION: hasMoveAssignment : [#bool#]hasMoveAssignment()[# const#]
COMPLETION: hasMoveConstructor : [#bool#]hasMoveConstructor()[# const#]
COMPLETION: hasMutableFields : [#bool#]hasMutableFields()[# const#]
COMPLETION: hasNameForLinkage : [#bool#]hasNameForLinkage()[# const#]
COMPLETION: hasNonLiteralTypeFieldsOrBases : [#bool#]hasNonLiteralTypeFieldsOrBases()[# const#]
COMPLETION: hasNonTrivialCopyAssignment : [#bool#]hasNonTrivialCopyAssignment()[# const#]
COMPLETION: hasNonTrivialCopyConstructor : [#bool#]hasNonTrivialCopyConstructor()[# const#]
COMPLETION: hasNonTrivialDefaultConstructor : [#bool#]hasNonTrivialDefaultConstructor()[# const#]
COMPLETION: hasNonTrivialDestructor : [#bool#]hasNonTrivialDestructor()[# const#]
COMPLETION: hasNonTrivialMoveAssignment : [#bool#]hasNonTrivialMoveAssignment()[# const#]
COMPLETION: hasNonTrivialMoveConstructor : [#bool#]hasNonTrivialMoveConstructor()[# const#]
COMPLETION: HasObjectMember : [#bool#]HasObjectMember
COMPLETION: hasObjectMember : [#bool#]hasObjectMember()[# const#]
COMPLETION: hasOwningModule : [#bool#]hasOwningModule()[# const#]
COMPLETION: hasSimpleCopyConstructor : [#bool#]hasSimpleCopyConstructor()[# const#]
COMPLETION: hasSimpleDestructor : [#bool#]hasSimpleDestructor()[# const#]
COMPLETION: hasSimpleMoveAssignment : [#bool#]hasSimpleMoveAssignment()[# const#]
COMPLETION: hasSimpleMoveConstructor : [#bool#]hasSimpleMoveConstructor()[# const#]
COMPLETION: hasTagIdentifierNamespace : [#bool#]hasTagIdentifierNamespace()[# const#]
COMPLETION: hasTrivialCopyAssignment : [#bool#]hasTrivialCopyAssignment()[# const#]
COMPLETION: hasTrivialCopyConstructor : [#bool#]hasTrivialCopyConstructor()[# const#]
COMPLETION: hasTrivialDefaultConstructor : [#bool#]hasTrivialDefaultConstructor()[# const#]
COMPLETION: hasTrivialDestructor : [#bool#]hasTrivialDestructor()[# const#]
COMPLETION: hasTrivialMoveAssignment : [#bool#]hasTrivialMoveAssignment()[# const#]
COMPLETION: hasTrivialMoveConstructor : [#bool#]hasTrivialMoveConstructor()[# const#]
COMPLETION: hasUninitializedReferenceMember : [#bool#]hasUninitializedReferenceMember()[# const#]
COMPLETION: hasUserDeclaredConstructor : [#bool#]hasUserDeclaredConstructor()[# const#]
COMPLETION: hasUserDeclaredCopyAssignment : [#bool#]hasUserDeclaredCopyAssignment()[# const#]
COMPLETION: hasUserDeclaredCopyConstructor : [#bool#]hasUserDeclaredCopyConstructor()[# const#]
COMPLETION: hasUserDeclaredDestructor : [#bool#]hasUserDeclaredDestructor()[# const#]
COMPLETION: hasUserDeclaredMoveAssignment : [#bool#]hasUserDeclaredMoveAssignment()[# const#]
COMPLETION: hasUserDeclaredMoveConstructor : [#bool#]hasUserDeclaredMoveConstructor()[# const#]
COMPLETION: hasUserDeclaredMoveOperation : [#bool#]hasUserDeclaredMoveOperation()[# const#]
COMPLETION: hasUserProvidedDefaultConstructor : [#bool#]hasUserProvidedDefaultConstructor()[# const#]
COMPLETION: hasVariantMembers : [#bool#]hasVariantMembers()[# const#]
COMPLETION: HasVolatileMember : [#bool#]HasVolatileMember
COMPLETION: hasVolatileMember : [#bool#]hasVolatileMember()[# const#]
COMPLETION: IdentifierNamespace : [#unsigned int#]IdentifierNamespace
COMPLETION: IDNS_Label : [#clang::Decl::IdentifierNamespace#]IDNS_Label
COMPLETION: IDNS_LocalExtern : [#clang::Decl::IdentifierNamespace#]IDNS_LocalExtern
COMPLETION: IDNS_Member : [#clang::Decl::IdentifierNamespace#]IDNS_Member
COMPLETION: IDNS_Namespace : [#clang::Decl::IdentifierNamespace#]IDNS_Namespace
COMPLETION: IDNS_NonMemberOperator : [#clang::Decl::IdentifierNamespace#]IDNS_NonMemberOperator
COMPLETION: IDNS_ObjCProtocol : [#clang::Decl::IdentifierNamespace#]IDNS_ObjCProtocol
COMPLETION: IDNS_OMPReduction : [#clang::Decl::IdentifierNamespace#]IDNS_OMPReduction
COMPLETION: IDNS_Ordinary : [#clang::Decl::IdentifierNamespace#]IDNS_Ordinary
COMPLETION: IDNS_OrdinaryFriend : [#clang::Decl::IdentifierNamespace#]IDNS_OrdinaryFriend
COMPLETION: IDNS_Tag : [#clang::Decl::IdentifierNamespace#]IDNS_Tag
COMPLETION: IDNS_TagFriend : [#clang::Decl::IdentifierNamespace#]IDNS_TagFriend
COMPLETION: IDNS_Type : [#clang::Decl::IdentifierNamespace#]IDNS_Type
COMPLETION: IDNS_Using : [#clang::Decl::IdentifierNamespace#]IDNS_Using
COMPLETION: Implicit : [#unsigned int#]Implicit
COMPLETION: implicitCopyAssignmentHasConstParam : [#bool#]implicitCopyAssignmentHasConstParam()[# const#]
COMPLETION: implicitCopyConstructorHasConstParam : [#bool#]implicitCopyConstructorHasConstParam()[# const#]
COMPLETION: ImplicitParam : [#clang::Decl::Kind#]ImplicitParam
COMPLETION: Import : [#clang::Decl::Kind#]Import
COMPLETION: IndirectField : [#clang::Decl::Kind#]IndirectField
COMPLETION: InEnclosingNamespaceSetOf : [#bool#]InEnclosingNamespaceSetOf(<#const DeclContext *NS#>)[# const#]
COMPLETION: InvalidDecl : [#unsigned int#]InvalidDecl
COMPLETION: isAbstract : [#bool#]isAbstract()[# const#]
COMPLETION: isAggregate : [#bool#]isAggregate()[# const#]
COMPLETION: isAnonymousStructOrUnion : [#bool#]isAnonymousStructOrUnion()[# const#]
COMPLETION: isAnyDestructorNoReturn : [#bool#]isAnyDestructorNoReturn()[# const#]
COMPLETION: IsBeingDefined : [#unsigned int#]IsBeingDefined
COMPLETION: isBeingDefined : [#bool#]isBeingDefined()[# const#]
COMPLETION: isCanonicalDecl : [#bool#]isCanonicalDecl()[# const#]
COMPLETION: isCapturedRecord : [#bool#]isCapturedRecord()[# const#]
COMPLETION: isClass : [#bool#]isClass()[# const#]
COMPLETION: isCLike : [#bool#]isCLike()[# const#]
COMPLETION: isClosure : [#bool#]isClosure()[# const#]
COMPLETION: IsCompleteDefinition : [#unsigned int#]IsCompleteDefinition
COMPLETION: isCompleteDefinition : [#bool#]isCompleteDefinition()[# const#]
COMPLETION: IsCompleteDefinitionRequired : [#unsigned int#]IsCompleteDefinitionRequired
COMPLETION: isCompleteDefinitionRequired : [#bool#]isCompleteDefinitionRequired()[# const#]
COMPLETION: isCurrentInstantiation : [#bool#]isCurrentInstantiation(<#const DeclContext *CurContext#>)[# const#]
COMPLETION: isCXXClassMember : [#bool#]isCXXClassMember()[# const#]
COMPLETION: isCXXInstanceMember : [#bool#]isCXXInstanceMember()[# const#]
COMPLETION: isDeclInLexicalTraversal : [#bool#]isDeclInLexicalTraversal(<#const Decl *D#>)[# const#]
COMPLETION: isDefinedOutsideFunctionOrMethod : [#bool#]isDefinedOutsideFunctionOrMethod()[# const#]
COMPLETION: isDependentContext : [#bool#]isDependentContext()[# const#]
COMPLETION: isDependentLambda : [#bool#]isDependentLambda()[# const#]
COMPLETION: isDependentType : [#bool#]isDependentType()[# const#]
COMPLETION: isDeprecated : [#bool#]isDeprecated({#<#std::string *Message = nullptr#>#})[# const#]
COMPLETION: isDerivedFrom : [#bool#]isDerivedFrom(<#const CXXRecordDecl *Base#>)[# const#]
COMPLETION: isDerivedFrom : [#bool#]isDerivedFrom(<#const CXXRecordDecl *Base#>, <#CXXBasePaths &Paths#>)[# const#]
COMPLETION: isDynamicClass : [#bool#]isDynamicClass()[# const#]
COMPLETION: IsEmbeddedInDeclarator : [#unsigned int#]IsEmbeddedInDeclarator
COMPLETION: isEmbeddedInDeclarator : [#bool#]isEmbeddedInDeclarator()[# const#]
COMPLETION: isEmpty : [#bool#]isEmpty()[# const#]
COMPLETION: isEnum : [#bool#]isEnum()[# const#]
COMPLETION: isExplicitInstantiationOrSpecialization : [#bool#]isExplicitInstantiationOrSpecialization()[# const#]
COMPLETION: isExplicitSpecialization : [#bool#]isExplicitSpecialization()[# const#]
COMPLETION: isExported : [#bool#]isExported()[# const#]
COMPLETION: isExternallyDeclarable : [#bool#]isExternallyDeclarable()[# const#]
COMPLETION: isExternallyVisible : [#bool#]isExternallyVisible()[# const#]
COMPLETION: isExternCContext : [#bool#]isExternCContext()[# const#]
COMPLETION: isExternCXXContext : [#bool#]isExternCXXContext()[# const#]
COMPLETION: isFileContext : [#bool#]isFileContext()[# const#]
COMPLETION: isFirstDecl : [#bool#]isFirstDecl()[# const#]
COMPLETION: isFirstDecl (Hidden) : [#bool#]clang::Decl::isFirstDecl()[# const#]
COMPLETION: IsFixed : [#unsigned int#]IsFixed
COMPLETION: IsFreeStanding : [#unsigned int#]IsFreeStanding
COMPLETION: isFreeStanding : [#bool#]isFreeStanding()[# const#]
COMPLETION: isFromASTFile : [#bool#]isFromASTFile()[# const#]
COMPLETION: isFunctionOrFunctionTemplate : [#bool#]isFunctionOrFunctionTemplate()[# const#]
COMPLETION: isFunctionOrMethod : [#bool#]isFunctionOrMethod()[# const#]
COMPLETION: isGenericLambda : [#bool#]isGenericLambda()[# const#]
COMPLETION: isHidden : [#bool#]isHidden()[# const#]
COMPLETION: isImplicit : [#bool#]isImplicit()[# const#]
COMPLETION: isInAnonymousNamespace : [#bool#]isInAnonymousNamespace()[# const#]
COMPLETION: isInIdentifierNamespace : [#bool#]isInIdentifierNamespace(<#unsigned int NS#>)[# const#]
COMPLETION: isInjectedClassName : [#bool#]isInjectedClassName()[# const#]
COMPLETION: isInlineNamespace : [#bool#]isInlineNamespace()[# const#]
COMPLETION: isInSemaDC : [#bool#]isInSemaDC()[# const#]
COMPLETION: isInStdNamespace : [#bool#]isInStdNamespace()[# const#]
COMPLETION: isInterface : [#bool#]isInterface()[# const#]
COMPLETION: isInterfaceLike : [#bool#]isInterfaceLike()[# const#]
COMPLETION: isInvalidDecl : [#bool#]isInvalidDecl()[# const#]
COMPLETION: isLambda : [#bool#]isLambda()[# const#]
COMPLETION: isLambda (Hidden) : [#bool#]clang::RecordDecl::isLambda()[# const#]
COMPLETION: isLexicallyWithinFunctionOrMethod : [#bool#]isLexicallyWithinFunctionOrMethod()[# const#]
COMPLETION: isLinkageValid : [#bool#]isLinkageValid()[# const#]
COMPLETION: isLiteral : [#bool#]isLiteral()[# const#]
COMPLETION: isLocalClass : [#const FunctionDecl *#]isLocalClass()[# const#]
COMPLETION: isLocalClass : [#FunctionDecl *#]isLocalClass()
COMPLETION: isLocalExternDecl : [#bool#]isLocalExternDecl()
COMPLETION: isLookupContext : [#bool#]isLookupContext()[# const#]
COMPLETION: isModulePrivate : [#bool#]isModulePrivate()[# const#]
COMPLETION: isMsStruct : [#bool#]isMsStruct(<#const ASTContext &C#>)[# const#]
COMPLETION: isNamespace : [#bool#]isNamespace()[# const#]
COMPLETION: isObjCContainer : [#bool#]isObjCContainer()[# const#]
COMPLETION: isOutOfLine : [#bool#]isOutOfLine()[# const#]
COMPLETION: isOutOfSemaDC : [#bool#]isOutOfSemaDC()[# const#]
COMPLETION: isParameterPack : [#bool#]isParameterPack()[# const#]
COMPLETION: isParsingBaseSpecifiers : [#bool#]isParsingBaseSpecifiers()[# const#]
COMPLETION: isPOD : [#bool#]isPOD()[# const#]
COMPLETION: isPolymorphic : [#bool#]isPolymorphic()[# const#]
COMPLETION: isProvablyNotDerivedFrom : [#bool#]isProvablyNotDerivedFrom(<#const CXXRecordDecl *Base#>)[# const#]
COMPLETION: isRecord : [#bool#]isRecord()[# const#]
COMPLETION: isReferenced : [#bool#]isReferenced()[# const#]
COMPLETION: IsScoped : [#unsigned int#]IsScoped
COMPLETION: IsScopedUsingClassTag : [#unsigned int#]IsScopedUsingClassTag
COMPLETION: isStandardLayout : [#bool#]isStandardLayout()[# const#]
COMPLETION: isStdNamespace : [#bool#]isStdNamespace()[# const#]
COMPLETION: isStruct : [#bool#]isStruct()[# const#]
COMPLETION: isTagIdentifierNamespace : [#bool#]isTagIdentifierNamespace(<#unsigned int NS#>)
COMPLETION: isTemplated : [#bool#]isTemplated()[# const#]
COMPLETION: isTemplateDecl : [#bool#]isTemplateDecl()[# const#]
COMPLETION: isTemplateParameter : [#bool#]isTemplateParameter()[# const#]
COMPLETION: isTemplateParameterPack : [#bool#]isTemplateParameterPack()[# const#]
COMPLETION: isThisDeclarationADefinition : [#bool#]isThisDeclarationADefinition()[# const#]
COMPLETION: isThisDeclarationReferenced : [#bool#]isThisDeclarationReferenced()[# const#]
COMPLETION: isTopLevelDeclInObjCContainer : [#bool#]isTopLevelDeclInObjCContainer()[# const#]
COMPLETION: isTranslationUnit : [#bool#]isTranslationUnit()[# const#]
COMPLETION: isTransparentContext : [#bool#]isTransparentContext()[# const#]
COMPLETION: isTrivial : [#bool#]isTrivial()[# const#]
COMPLETION: isTriviallyCopyable : [#bool#]isTriviallyCopyable()[# const#]
COMPLETION: isUnavailable : [#bool#]isUnavailable({#<#std::string *Message = nullptr#>#})[# const#]
COMPLETION: isUnion : [#bool#]isUnion()[# const#]
COMPLETION: isUsed : [#bool#]isUsed({#<#bool CheckUsedAttr = true#>#})[# const#]
COMPLETION: isVirtuallyDerivedFrom : [#bool#]isVirtuallyDerivedFrom(<#const CXXRecordDecl *Base#>)[# const#]
COMPLETION: isWeakImported : [#bool#]isWeakImported()[# const#]
COMPLETION: Kind : Kind
COMPLETION: Label : [#clang::Decl::Kind#]Label
COMPLETION: LambdaDefinitionData : LambdaDefinitionData
COMPLETION: lastClassTemplateSpecialization : [#clang::Decl::Kind#]lastClassTemplateSpecialization
COMPLETION: lastCXXMethod : [#clang::Decl::Kind#]lastCXXMethod
COMPLETION: lastCXXRecord : [#clang::Decl::Kind#]lastCXXRecord
COMPLETION: LastDecl : [#Decl *#]LastDecl
COMPLETION: lastDecl : [#clang::Decl::Kind#]lastDecl
COMPLETION: lastDeclarator : [#clang::Decl::Kind#]lastDeclarator
COMPLETION: lastField : [#clang::Decl::Kind#]lastField
COMPLETION: lastFunction : [#clang::Decl::Kind#]lastFunction
COMPLETION: lastNamed : [#clang::Decl::Kind#]lastNamed
COMPLETION: lastObjCContainer : [#clang::Decl::Kind#]lastObjCContainer
COMPLETION: lastObjCImpl : [#clang::Decl::Kind#]lastObjCImpl
COMPLETION: lastRecord : [#clang::Decl::Kind#]lastRecord
COMPLETION: lastRedeclarableTemplate : [#clang::Decl::Kind#]lastRedeclarableTemplate
COMPLETION: lastTag : [#clang::Decl::Kind#]lastTag
COMPLETION: lastTemplate : [#clang::Decl::Kind#]lastTemplate
COMPLETION: lastType : [#clang::Decl::Kind#]lastType
COMPLETION: lastTypedefName : [#clang::Decl::Kind#]lastTypedefName
COMPLETION: lastUsingShadow : [#clang::Decl::Kind#]lastUsingShadow
COMPLETION: lastValue : [#clang::Decl::Kind#]lastValue
COMPLETION: lastVar : [#clang::Decl::Kind#]lastVar
COMPLETION: lastVarTemplateSpecialization : [#clang::Decl::Kind#]lastVarTemplateSpecialization
COMPLETION: LatestDeclLink : [#DeclLink#]LatestDeclLink(<#const ASTContext &Ctx#>)
COMPLETION: LinkageSpec : [#clang::Decl::Kind#]LinkageSpec
COMPLETION: LoadedFieldsFromExternalStorage : [#bool#]LoadedFieldsFromExternalStorage
COMPLETION: LoadFieldsFromExternalStorage : [#void#]LoadFieldsFromExternalStorage()[# const#]
COMPLETION: LoadLexicalDeclsFromExternalStorage : [#bool#]LoadLexicalDeclsFromExternalStorage()[# const#]
COMPLETION: Loc : [#SourceLocation#]Loc
COMPLETION: localUncachedLookup : [#void#]localUncachedLookup(<#DeclarationName Name#>, <#SmallVectorImpl<NamedDecl *> &Results#>)
COMPLETION: LocStart : [#SourceLocation#]LocStart
COMPLETION: lookup : [#lookup_result#]lookup(<#DeclarationName Name#>)[# const#]
COMPLETION: lookup_iterator : lookup_iterator
COMPLETION: lookup_result : lookup_result
COMPLETION: lookupDependentName : [#std::vector<const NamedDecl *>#]lookupDependentName(<#const DeclarationName &Name#>, <#llvm::function_ref<bool (const NamedDecl *)> Filter#>)
COMPLETION: lookupInBases : [#bool#]lookupInBases(<#BaseMatchesCallback BaseMatches#>, <#CXXBasePaths &Paths#>{#, <#bool LookupInDependent = false#>#})[# const#]
COMPLETION: LookupPtr : [#StoredDeclsMap *#]LookupPtr
COMPLETION: lookups : [#DeclContext::lookups_range#]lookups()[# const#]
COMPLETION: lookups_begin : [#DeclContext::all_lookups_iterator#]lookups_begin()[# const#]
COMPLETION: lookups_end : [#DeclContext::all_lookups_iterator#]lookups_end()[# const#]
COMPLETION: lookups_range : lookups_range
COMPLETION: makeDeclVisibleInContext : [#void#]makeDeclVisibleInContext(<#NamedDecl *D#>)
COMPLETION: makeDeclVisibleInContextImpl : [#void#]makeDeclVisibleInContextImpl(<#NamedDecl *D#>, <#bool Internal#>)
COMPLETION: makeDeclVisibleInContextInternal : [#void#]makeDeclVisibleInContextInternal(<#NamedDecl *D#>)
COMPLETION: makeDeclVisibleInContextWithFlags : [#void#]makeDeclVisibleInContextWithFlags(<#NamedDecl *D#>, <#bool Internal#>, <#bool Rediscoverable#>)
COMPLETION: markedVirtualFunctionPure : [#void#]markedVirtualFunctionPure()
COMPLETION: markUsed : [#void#]markUsed(<#ASTContext &C#>)
COMPLETION: mayBeAbstract : [#bool#]mayBeAbstract()[# const#]
COMPLETION: MayHaveOutOfDateDef : [#unsigned int#]MayHaveOutOfDateDef
COMPLETION: mayInsertExtraPadding : [#bool#]mayInsertExtraPadding({#<#bool EmitRemark = false#>#})[# const#]
COMPLETION: MergeAccess : [#AccessSpecifier#]MergeAccess(<#AccessSpecifier PathAccess#>, <#AccessSpecifier DeclAccess#>)
COMPLETION: method_begin : [#method_iterator#]method_begin()[# const#]
COMPLETION: method_end : [#method_iterator#]method_end()[# const#]
COMPLETION: method_iterator : method_iterator
COMPLETION: method_range : method_range
COMPLETION: methods : [#method_range#]methods()[# const#]
COMPLETION: ModuleOwnershipKind : ModuleOwnershipKind
COMPLETION: MSProperty : [#clang::Decl::Kind#]MSProperty
COMPLETION: MultipleDC : MultipleDC
COMPLETION: Name : [#DeclarationName#]Name
COMPLETION: NamedDecl : NamedDecl
COMPLETION: Namespace : [#clang::Decl::Kind#]Namespace
COMPLETION: NamespaceAlias : [#clang::Decl::Kind#]NamespaceAlias
COMPLETION: needsImplicitCopyAssignment : [#bool#]needsImplicitCopyAssignment()[# const#]
COMPLETION: needsImplicitCopyConstructor : [#bool#]needsImplicitCopyConstructor()[# const#]
COMPLETION: needsImplicitDefaultConstructor : [#bool#]needsImplicitDefaultConstructor()[# const#]
COMPLETION: needsImplicitDestructor : [#bool#]needsImplicitDestructor()[# const#]
COMPLETION: needsImplicitMoveAssignment : [#bool#]needsImplicitMoveAssignment()[# const#]
COMPLETION: needsImplicitMoveConstructor : [#bool#]needsImplicitMoveConstructor()[# const#]
COMPLETION: needsOverloadResolutionForCopyAssignment : [#bool#]needsOverloadResolutionForCopyAssignment()[# const#]
COMPLETION: needsOverloadResolutionForCopyConstructor : [#bool#]needsOverloadResolutionForCopyConstructor()[# const#]
COMPLETION: needsOverloadResolutionForDestructor : [#bool#]needsOverloadResolutionForDestructor()[# const#]
COMPLETION: needsOverloadResolutionForMoveAssignment : [#bool#]needsOverloadResolutionForMoveAssignment()[# const#]
COMPLETION: needsOverloadResolutionForMoveConstructor : [#bool#]needsOverloadResolutionForMoveConstructor()[# const#]
COMPLETION: NeedToReconcileExternalVisibleStorage : [#bool#]NeedToReconcileExternalVisibleStorage
COMPLETION: NextInContextAndBits : [#llvm::PointerIntPair<Decl *, 2, ModuleOwnershipKind>#]NextInContextAndBits
COMPLETION: NextInFoldingSetBucket : [#void *#]NextInFoldingSetBucket
COMPLETION: Node : Node
COMPLETION: noload_decls : [#decl_range#]noload_decls()[# const#]
COMPLETION: noload_decls_begin : [#decl_iterator#]noload_decls_begin()[# const#]
COMPLETION: noload_decls_end : [#decl_iterator#]noload_decls_end()[# const#]
COMPLETION: noload_lookup : [#lookup_result#]noload_lookup(<#DeclarationName Name#>)
COMPLETION: noload_lookups : [#DeclContext::lookups_range#]noload_lookups()[# const#]
COMPLETION: noload_lookups_begin : [#DeclContext::all_lookups_iterator#]noload_lookups_begin()[# const#]
COMPLETION: noload_lookups_end : [#DeclContext::all_lookups_iterator#]noload_lookups_end()[# const#]
COMPLETION: NonTypeTemplateParm : [#clang::Decl::Kind#]NonTypeTemplateParm
COMPLETION: nullFieldOffsetIsZero : [#bool#]nullFieldOffsetIsZero()[# const#]
COMPLETION: NumNegativeBits : [#unsigned int#]NumNegativeBits
COMPLETION: NumPositiveBits : [#unsigned int#]NumPositiveBits
COMPLETION: OBJC_TQ_Bycopy : [#clang::Decl::ObjCDeclQualifier#]OBJC_TQ_Bycopy
COMPLETION: OBJC_TQ_Byref : [#clang::Decl::ObjCDeclQualifier#]OBJC_TQ_Byref
COMPLETION: OBJC_TQ_CSNullability : [#clang::Decl::ObjCDeclQualifier#]OBJC_TQ_CSNullability
COMPLETION: OBJC_TQ_In : [#clang::Decl::ObjCDeclQualifier#]OBJC_TQ_In
COMPLETION: OBJC_TQ_Inout : [#clang::Decl::ObjCDeclQualifier#]OBJC_TQ_Inout
COMPLETION: OBJC_TQ_None : [#clang::Decl::ObjCDeclQualifier#]OBJC_TQ_None
COMPLETION: OBJC_TQ_Oneway : [#clang::Decl::ObjCDeclQualifier#]OBJC_TQ_Oneway
COMPLETION: OBJC_TQ_Out : [#clang::Decl::ObjCDeclQualifier#]OBJC_TQ_Out
COMPLETION: ObjCAtDefsField : [#clang::Decl::Kind#]ObjCAtDefsField
COMPLETION: ObjCCategory : [#clang::Decl::Kind#]ObjCCategory
COMPLETION: ObjCCategoryImpl : [#clang::Decl::Kind#]ObjCCategoryImpl
COMPLETION: ObjCCompatibleAlias : [#clang::Decl::Kind#]ObjCCompatibleAlias
COMPLETION: ObjCDeclQualifier : ObjCDeclQualifier
COMPLETION: ObjCImplementation : [#clang::Decl::Kind#]ObjCImplementation
COMPLETION: ObjCInterface : [#clang::Decl::Kind#]ObjCInterface
COMPLETION: ObjCIvar : [#clang::Decl::Kind#]ObjCIvar
COMPLETION: ObjCMethod : [#clang::Decl::Kind#]ObjCMethod
COMPLETION: ObjCProperty : [#clang::Decl::Kind#]ObjCProperty
COMPLETION: ObjCPropertyImpl : [#clang::Decl::Kind#]ObjCPropertyImpl
COMPLETION: ObjCProtocol : [#clang::Decl::Kind#]ObjCProtocol
COMPLETION: ObjCTypeParam : [#clang::Decl::Kind#]ObjCTypeParam
COMPLETION: OMPCapturedExpr : [#clang::Decl::Kind#]OMPCapturedExpr
COMPLETION: OMPDeclareReduction : [#clang::Decl::Kind#]OMPDeclareReduction
COMPLETION: OMPThreadPrivate : [#clang::Decl::Kind#]OMPThreadPrivate
COMPLETION: operator new : [#void *#]operator new(<#std::size_t Size#>, <#const ASTContext &Ctx#>, <#unsigned int ID#>{#, <#std::size_t Extra = 0#>#})
COMPLETION: operator new : [#void *#]operator new(<#std::size_t Size#>, <#const ASTContext &Ctx#>, <#DeclContext *Parent#>{#, <#std::size_t Extra = 0#>#})
COMPLETION: operator= : [#ClassTemplateSpecializationDecl &#]operator=(<#const ClassTemplateSpecializationDecl &#>)
COMPLETION: operator= : [#ClassTemplateSpecializationDecl &#]operator=(<#ClassTemplateSpecializationDecl &&#>)
COMPLETION: operator= (Hidden) : [#CXXRecordDecl &#]clang::CXXRecordDecl::operator=(<#const CXXRecordDecl &#>)
COMPLETION: operator= (Hidden) : [#CXXRecordDecl &#]clang::CXXRecordDecl::operator=(<#CXXRecordDecl &&#>)
COMPLETION: operator= (Hidden) : [#RecordDecl &#]clang::RecordDecl::operator=(<#const RecordDecl &#>)
COMPLETION: operator= (Hidden) : [#RecordDecl &#]clang::RecordDecl::operator=(<#RecordDecl &&#>)
COMPLETION: operator= (Hidden) : [#TagDecl &#]clang::TagDecl::operator=(<#const TagDecl &#>)
COMPLETION: operator= (Hidden) : [#TagDecl &#]clang::TagDecl::operator=(<#TagDecl &&#>)
COMPLETION: operator= (Hidden) : [#TypeDecl &#]clang::TypeDecl::operator=(<#const TypeDecl &#>)
COMPLETION: operator= (Hidden) : [#TypeDecl &#]clang::TypeDecl::operator=(<#TypeDecl &&#>)
COMPLETION: operator= (Hidden) : [#NamedDecl &#]clang::NamedDecl::operator=(<#const NamedDecl &#>)
COMPLETION: operator= (Hidden) : [#NamedDecl &#]clang::NamedDecl::operator=(<#NamedDecl &&#>)
COMPLETION: operator= (Hidden) : [#Decl &#]clang::Decl::operator=(<#const Decl &#>)
COMPLETION: operator= (Hidden) : [#DeclContext &#]clang::DeclContext::operator=(<#const DeclContext &#>)
COMPLETION: operator= (Hidden) : [#Redeclarable<TagDecl> &#]clang::Redeclarable<TagDecl>::operator=(<#const Redeclarable<TagDecl> &#>)
COMPLETION: operator= (Hidden) : [#Redeclarable<TagDecl> &#]clang::Redeclarable<TagDecl>::operator=(<#Redeclarable<TagDecl> &&#>)
COMPLETION: operator= (Hidden) : [#Node &#]llvm::FoldingSetBase::Node::operator=(<#const Node &#>)
COMPLETION: operator= (Hidden) : [#Node &#]llvm::FoldingSetBase::Node::operator=(<#Node &&#>)
COMPLETION: ParmVar : [#clang::Decl::Kind#]ParmVar
COMPLETION: PointOfInstantiation : [#SourceLocation#]PointOfInstantiation
COMPLETION: PragmaComment : [#clang::Decl::Kind#]PragmaComment
COMPLETION: PragmaDetectMismatch : [#clang::Decl::Kind#]PragmaDetectMismatch
COMPLETION: PreviousDeclLink : [#DeclLink#]PreviousDeclLink(<#TagDecl *D#>)
COMPLETION: print : [#void#]print(<#raw_ostream &Out#>{#, <#unsigned int Indentation = 0#>{#, <#bool PrintInstantiation = false#>#}#})[# const#]
COMPLETION: print : [#void#]print(<#raw_ostream &Out#>, <#const PrintingPolicy &Policy#>{#, <#unsigned int Indentation = 0#>{#, <#bool PrintInstantiation = false#>#}#})[# const#]
COMPLETION: printGroup : [#void#]printGroup(<#Decl **Begin#>, <#unsigned int NumDecls#>, <#raw_ostream &Out#>, <#const PrintingPolicy &Policy#>{#, <#unsigned int Indentation = 0#>#})
COMPLETION: printName : [#void#]printName(<#raw_ostream &os#>)[# const#]
COMPLETION: printQualifiedName : [#void#]printQualifiedName(<#raw_ostream &OS#>)[# const#]
COMPLETION: printQualifiedName : [#void#]printQualifiedName(<#raw_ostream &OS#>, <#const PrintingPolicy &Policy#>)[# const#]
COMPLETION: PrintStats : [#void#]PrintStats()
COMPLETION: Profile : [#void#]Profile(<#llvm::FoldingSetNodeID &ID#>)[# const#]
COMPLETION: Profile : [#void#]Profile(<#llvm::FoldingSetNodeID &ID#>, <#ArrayRef<TemplateArgument> TemplateArgs#>, <#ASTContext &Context#>)
COMPLETION: pushFriendDecl : [#void#]pushFriendDecl(<#FriendDecl *FD#>)
COMPLETION: reconcileExternalVisibleStorage : [#void#]reconcileExternalVisibleStorage()[# const#]
COMPLETION: Record : [#clang::Decl::Kind#]Record
COMPLETION: RecordDecl : RecordDecl
COMPLETION: redecl_iterator : redecl_iterator
COMPLETION: redecl_iterator (Hidden) : clang::Decl::redecl_iterator
COMPLETION: redecl_iterator (Hidden) : clang::Redeclarable<TagDecl>::redecl_iterator
COMPLETION: redecl_range : redecl_range
COMPLETION: redecl_range (Hidden) : clang::Decl::redecl_range
COMPLETION: redecl_range (Hidden) : clang::Redeclarable<TagDecl>::redecl_range
COMPLETION: Redeclarable : Redeclarable
COMPLETION: redeclarable_base : redeclarable_base
COMPLETION: RedeclLink : [#DeclLink#]RedeclLink
COMPLETION: redecls : [#redecl_range#]redecls()[# const#]
COMPLETION: redecls (Hidden) : [#redecl_range#]clang::Decl::redecls()[# const#]
COMPLETION: redecls_begin : [#redecl_iterator#]redecls_begin()[# const#]
COMPLETION: redecls_begin (Hidden) : [#redecl_iterator#]clang::Decl::redecls_begin()[# const#]
COMPLETION: redecls_end : [#redecl_iterator#]redecls_end()[# const#]
COMPLETION: redecls_end (Hidden) : [#redecl_iterator#]clang::Decl::redecls_end()[# const#]
COMPLETION: Referenced : [#unsigned int#]Referenced
COMPLETION: removeConversion : [#void#]removeConversion(<#const NamedDecl *Old#>)
COMPLETION: removeDecl : [#void#]removeDecl(<#Decl *D#>)
COMPLETION: setAccess : [#void#]setAccess(<#AccessSpecifier AS#>)
COMPLETION: setAnonymousStructOrUnion : [#void#]setAnonymousStructOrUnion(<#bool Anon#>)
COMPLETION: setAttrs : [#void#]setAttrs(<#const AttrVec &Attrs#>)
COMPLETION: setAttrsImpl : [#void#]setAttrsImpl(<#const AttrVec &Attrs#>, <#ASTContext &Ctx#>)
COMPLETION: setBases : [#void#]setBases(<#const CXXBaseSpecifier *const *Bases#>, <#unsigned int NumBases#>)
COMPLETION: setBraceRange : [#void#]setBraceRange(<#SourceRange R#>)
COMPLETION: setCachedLinkage : [#void#]setCachedLinkage(<#Linkage L#>)[# const#]
COMPLETION: setCanPassInRegisters : [#void#]setCanPassInRegisters(<#bool CanPass#>)
COMPLETION: setCapturedRecord : [#void#]setCapturedRecord()
COMPLETION: setCompleteDefinition : [#void#]setCompleteDefinition(<#bool V#>)
COMPLETION: setCompleteDefinitionRequired : [#void#]setCompleteDefinitionRequired({#<#bool V = true#>#})
COMPLETION: setDeclContext : [#void#]setDeclContext(<#DeclContext *DC#>)
COMPLETION: setDeclContextsImpl : [#void#]setDeclContextsImpl(<#DeclContext *SemaDC#>, <#DeclContext *LexicalDC#>, <#ASTContext &Ctx#>)
COMPLETION: setDeclName : [#void#]setDeclName(<#DeclarationName N#>)
COMPLETION: setDescribedClassTemplate : [#void#]setDescribedClassTemplate(<#ClassTemplateDecl *Template#>)
COMPLETION: setEmbeddedInDeclarator : [#void#]setEmbeddedInDeclarator(<#bool isInDeclarator#>)
COMPLETION: setExternLoc : [#void#]setExternLoc(<#SourceLocation Loc#>)
COMPLETION: setFreeStanding : [#void#]setFreeStanding({#<#bool isFreeStanding = true#>#})
COMPLETION: setHasExternalLexicalStorage : [#void#]setHasExternalLexicalStorage({#<#bool ES = true#>#})
COMPLETION: setHasExternalVisibleStorage : [#void#]setHasExternalVisibleStorage({#<#bool ES = true#>#})
COMPLETION: setHasFlexibleArrayMember : [#void#]setHasFlexibleArrayMember(<#bool V#>)
COMPLETION: setHasLoadedFieldsFromExternalStorage : [#void#]setHasLoadedFieldsFromExternalStorage(<#bool val#>)
COMPLETION: setHasObjectMember : [#void#]setHasObjectMember(<#bool val#>)
COMPLETION: setHasVolatileMember : [#void#]setHasVolatileMember(<#bool val#>)
COMPLETION: setImplicit : [#void#]setImplicit({#<#bool I = true#>#})
COMPLETION: setImplicitCopyConstructorIsDeleted : [#void#]setImplicitCopyConstructorIsDeleted()
COMPLETION: setImplicitDestructorIsDeleted : [#void#]setImplicitDestructorIsDeleted()
COMPLETION: setImplicitMoveAssignmentIsDeleted : [#void#]setImplicitMoveAssignmentIsDeleted()
COMPLETION: setImplicitMoveConstructorIsDeleted : [#void#]setImplicitMoveConstructorIsDeleted()
COMPLETION: setInstantiationOf : [#void#]setInstantiationOf(<#ClassTemplatePartialSpecializationDecl *PartialSpec#>, <#const TemplateArgumentList *TemplateArgs#>)
COMPLETION: setInstantiationOf : [#void#]setInstantiationOf(<#ClassTemplateDecl *TemplDecl#>)
COMPLETION: setInstantiationOfMemberClass : [#void#]setInstantiationOfMemberClass(<#CXXRecordDecl *RD#>, <#TemplateSpecializationKind TSK#>)
COMPLETION: setInvalidDecl : [#void#]setInvalidDecl({#<#bool Invalid = true#>#})
COMPLETION: setIsParsingBaseSpecifiers : [#void#]setIsParsingBaseSpecifiers()
COMPLETION: setIsUsed : [#void#]setIsUsed()
COMPLETION: setLambdaMangling : [#void#]setLambdaMangling(<#unsigned int ManglingNumber#>, <#Decl *ContextDecl#>)
COMPLETION: setLexicalDeclContext : [#void#]setLexicalDeclContext(<#DeclContext *DC#>)
COMPLETION: setLocalExternDecl : [#void#]setLocalExternDecl()
COMPLETION: setLocalOwningModule : [#void#]setLocalOwningModule(<#Module *M#>)
COMPLETION: setLocation : [#void#]setLocation(<#SourceLocation L#>)
COMPLETION: setLocStart : [#void#]setLocStart(<#SourceLocation L#>)
COMPLETION: setModuleOwnershipKind : [#void#]setModuleOwnershipKind(<#ModuleOwnershipKind MOK#>)
COMPLETION: setModulePrivate : [#void#]setModulePrivate()
COMPLETION: setMustBuildLookupTable : [#void#]setMustBuildLookupTable()
COMPLETION: SetNextInBucket : [#void#]SetNextInBucket(<#void *N#>)
COMPLETION: setNonMemberOperator : [#void#]setNonMemberOperator()
COMPLETION: setObjectOfFriendDecl : [#void#]setObjectOfFriendDecl({#<#bool PerformFriendInjection = false#>#})
COMPLETION: setOwningModuleID : [#void#]setOwningModuleID(<#unsigned int ID#>)
COMPLETION: setPointOfInstantiation : [#void#]setPointOfInstantiation(<#SourceLocation Loc#>)
COMPLETION: setPreviousDecl : [#void#]setPreviousDecl(<#TagDecl *PrevDecl#>)
COMPLETION: setQualifierInfo : [#void#]setQualifierInfo(<#NestedNameSpecifierLoc QualifierLoc#>)
COMPLETION: setReferenced : [#void#]setReferenced({#<#bool R = true#>#})
COMPLETION: setSpecializationKind : [#void#]setSpecializationKind(<#TemplateSpecializationKind TSK#>)
COMPLETION: setTagKind : [#void#]setTagKind(<#TagKind TK#>)
COMPLETION: setTemplateKeywordLoc : [#void#]setTemplateKeywordLoc(<#SourceLocation Loc#>)
COMPLETION: setTemplateParameterListsInfo : [#void#]setTemplateParameterListsInfo(<#ASTContext &Context#>, <#ArrayRef<TemplateParameterList *> TPLists#>)
COMPLETION: setTemplateSpecializationKind : [#void#]setTemplateSpecializationKind(<#TemplateSpecializationKind TSK#>)
COMPLETION: setTopLevelDeclInObjCContainer : [#void#]setTopLevelDeclInObjCContainer({#<#bool V = true#>#})
COMPLETION: setTypeAsWritten : [#void#]setTypeAsWritten(<#TypeSourceInfo *T#>)
COMPLETION: setTypedefNameForAnonDecl : [#void#]setTypedefNameForAnonDecl(<#TypedefNameDecl *TDD#>)
COMPLETION: setTypeForDecl : [#void#]setTypeForDecl(<#const Type *TD#>)
COMPLETION: setUseQualifiedLookup : [#bool#]setUseQualifiedLookup({#<#bool use = true#>#})
COMPLETION: setVisibleDespiteOwningModule : [#void#]setVisibleDespiteOwningModule()
COMPLETION: shouldUseQualifiedLookup : [#bool#]shouldUseQualifiedLookup()[# const#]
COMPLETION: SMF_All : [#clang::CXXRecordDecl::SpecialMemberFlags#]SMF_All
COMPLETION: SMF_CopyAssignment : [#clang::CXXRecordDecl::SpecialMemberFlags#]SMF_CopyAssignment
COMPLETION: SMF_CopyConstructor : [#clang::CXXRecordDecl::SpecialMemberFlags#]SMF_CopyConstructor
COMPLETION: SMF_DefaultConstructor : [#clang::CXXRecordDecl::SpecialMemberFlags#]SMF_DefaultConstructor
COMPLETION: SMF_Destructor : [#clang::CXXRecordDecl::SpecialMemberFlags#]SMF_Destructor
COMPLETION: SMF_MoveAssignment : [#clang::CXXRecordDecl::SpecialMemberFlags#]SMF_MoveAssignment
COMPLETION: SMF_MoveConstructor : [#clang::CXXRecordDecl::SpecialMemberFlags#]SMF_MoveConstructor
COMPLETION: SpecializationKind : [#unsigned int#]SpecializationKind
COMPLETION: SpecializedPartialSpecialization : SpecializedPartialSpecialization
COMPLETION: SpecializedTemplate : [#llvm::PointerUnion<ClassTemplateDecl *, SpecializedPartialSpecialization *>#]SpecializedTemplate
COMPLETION: SpecialMemberFlags : SpecialMemberFlags
COMPLETION: specific_attr_begin : [#specific_attr_iterator<T>#]specific_attr_begin<<#typename T#>>()[# const#]
COMPLETION: specific_attr_end : [#specific_attr_iterator<T>#]specific_attr_end<<#typename T#>>()[# const#]
COMPLETION: specific_attrs : [#llvm::iterator_range<specific_attr_iterator<T> >#]specific_attrs<<#typename T#>>()[# const#]
COMPLETION: specific_decl_iterator : specific_decl_iterator<<#typename SpecificDecl#>>
COMPLETION: startDefinition : [#void#]startDefinition()
COMPLETION: StaticAssert : [#clang::Decl::Kind#]StaticAssert
COMPLETION: StatisticsEnabled : [#bool#]StatisticsEnabled
COMPLETION: TagDecl : TagDecl
COMPLETION: TagDeclKind : [#unsigned int#]TagDeclKind
COMPLETION: TagKind : TagKind
COMPLETION: TemplateArgs : [#const TemplateArgumentList *#]TemplateArgs
COMPLETION: TemplateOrInstantiation : [#llvm::PointerUnion<ClassTemplateDecl *, MemberSpecializationInfo *>#]TemplateOrInstantiation
COMPLETION: TemplateTemplateParm : [#clang::Decl::Kind#]TemplateTemplateParm
COMPLETION: TemplateTypeParm : [#clang::Decl::Kind#]TemplateTypeParm
COMPLETION: TopLevelDeclInObjCContainer : [#unsigned int#]TopLevelDeclInObjCContainer
COMPLETION: TranslationUnit : [#clang::Decl::Kind#]TranslationUnit
COMPLETION: TypeAlias : [#clang::Decl::Kind#]TypeAlias
COMPLETION: TypeAliasTemplate : [#clang::Decl::Kind#]TypeAliasTemplate
COMPLETION: TypeDecl : TypeDecl
COMPLETION: Typedef : [#clang::Decl::Kind#]Typedef
COMPLETION: TypedefNameDeclOrQualifier : [#llvm::PointerUnion<TypedefNameDecl *, ExtInfo *>#]TypedefNameDeclOrQualifier
COMPLETION: TypeForDecl : [#const Type *#]TypeForDecl
COMPLETION: udir_iterator : udir_iterator
COMPLETION: udir_iterator_base : udir_iterator_base
COMPLETION: udir_range : udir_range
COMPLETION: UnresolvedUsingTypename : [#clang::Decl::Kind#]UnresolvedUsingTypename
COMPLETION: UnresolvedUsingValue : [#clang::Decl::Kind#]UnresolvedUsingValue
COMPLETION: updateOutOfDate : [#void#]updateOutOfDate(<#IdentifierInfo &II#>)[# const#]
COMPLETION: Used : [#unsigned int#]Used
COMPLETION: UseQualifiedLookup : [#bool#]UseQualifiedLookup
COMPLETION: Using : [#clang::Decl::Kind#]Using
COMPLETION: using_directives : [#udir_range#]using_directives()[# const#]
COMPLETION: UsingDirective : [#clang::Decl::Kind#]UsingDirective
COMPLETION: UsingPack : [#clang::Decl::Kind#]UsingPack
COMPLETION: UsingShadow : [#clang::Decl::Kind#]UsingShadow
COMPLETION: Var : [#clang::Decl::Kind#]Var
COMPLETION: VarTemplate : [#clang::Decl::Kind#]VarTemplate
COMPLETION: VarTemplatePartialSpecialization : [#clang::Decl::Kind#]VarTemplatePartialSpecialization
COMPLETION: VarTemplateSpecialization : [#clang::Decl::Kind#]VarTemplateSpecialization
COMPLETION: vbases : [#base_class_range#]vbases()
COMPLETION: vbases : [#base_class_const_range#]vbases()[# const#]
COMPLETION: vbases_begin : [#base_class_iterator#]vbases_begin()
COMPLETION: vbases_begin : [#base_class_const_iterator#]vbases_begin()[# const#]
COMPLETION: vbases_end : [#base_class_iterator#]vbases_end()
COMPLETION: vbases_end : [#base_class_const_iterator#]vbases_end()[# const#]
COMPLETION: viewInheritance : [#void#]viewInheritance(<#ASTContext &Context#>)[# const#]
COMPLETION: VisibilityForType : [#clang::NamedDecl::ExplicitVisibilityKind#]VisibilityForType
COMPLETION: VisibilityForValue : [#clang::NamedDecl::ExplicitVisibilityKind#]VisibilityForValue
COMPLETION: ~ClassTemplateSpecializationDecl : [#void#]~ClassTemplateSpecializationDecl()
COMPLETION: ~CXXRecordDecl : [#void#]~CXXRecordDecl()
COMPLETION: ~Decl : [#void#]~Decl()
COMPLETION: ~DeclContext : [#void#]~DeclContext()
COMPLETION: ~NamedDecl : [#void#]~NamedDecl()
COMPLETION: ~Node : [#void#]~Node()
COMPLETION: ~RecordDecl : [#void#]~RecordDecl()
COMPLETION: ~Redeclarable : [#void#]~Redeclarable()
COMPLETION: ~TagDecl : [#void#]~TagDecl()
COMPLETION: ~TypeDecl : [#void#]~TypeDecl()
