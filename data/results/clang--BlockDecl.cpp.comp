COMPLETION: Access : [#unsigned int#]Access
COMPLETION: AccessDeclContextSanity : [#bool#]AccessDeclContextSanity()[# const#]
COMPLETION: AccessSpec : [#clang::Decl::Kind#]AccessSpec
COMPLETION: add : [#void#]add(<#Kind k#>)
COMPLETION: addAttr : [#void#]addAttr(<#Attr *A#>)
COMPLETION: addDecl : [#void#]addDecl(<#Decl *D#>)
COMPLETION: addDeclInternal : [#void#]addDeclInternal(<#Decl *D#>)
COMPLETION: addHiddenDecl : [#void#]addHiddenDecl(<#Decl *D#>)
COMPLETION: all_lookups_iterator : all_lookups_iterator
COMPLETION: attr_begin : [#attr_iterator#]attr_begin()[# const#]
COMPLETION: attr_end : [#attr_iterator#]attr_end()[# const#]
COMPLETION: attr_iterator : attr_iterator
COMPLETION: attr_range : attr_range
COMPLETION: attrs : [#attr_range#]attrs()[# const#]
COMPLETION: Binding : [#clang::Decl::Kind#]Binding
COMPLETION: Block : [#clang::Decl::Kind#]Block
COMPLETION: BlockDecl : BlockDecl
COMPLETION: BlockMissingReturnType : [#bool#]BlockMissingReturnType
COMPLETION: blockMissingReturnType : [#bool#]blockMissingReturnType()[# const#]
COMPLETION: Body : [#Stmt *#]Body
COMPLETION: BuildDeclChain : [#std::pair<Decl *, Decl *>#]BuildDeclChain(<#ArrayRef<Decl *> Decls#>, <#bool FieldsAlreadyLoaded#>)
COMPLETION: buildLookup : [#StoredDeclsMap *#]buildLookup()
COMPLETION: buildLookupImpl : [#void#]buildLookupImpl(<#DeclContext *DCtx#>, <#bool Internal#>)
COMPLETION: BuiltinTemplate : [#clang::Decl::Kind#]BuiltinTemplate
COMPLETION: CacheValidAndLinkage : [#unsigned int#]CacheValidAndLinkage
COMPLETION: canBeWeakImported : [#bool#]canBeWeakImported(<#bool &IsDefinition#>)[# const#]
COMPLETION: Capture : Capture
COMPLETION: capture_begin : [#capture_const_iterator#]capture_begin()[# const#]
COMPLETION: capture_const_iterator : capture_const_iterator
COMPLETION: capture_end : [#capture_const_iterator#]capture_end()[# const#]
COMPLETION: Captured : [#clang::Decl::Kind#]Captured
COMPLETION: Captures : [#const Capture *#]Captures
COMPLETION: captures : [#ArrayRef<Capture>#]captures()[# const#]
COMPLETION: CapturesCXXThis : [#bool#]CapturesCXXThis
COMPLETION: capturesCXXThis : [#bool#]capturesCXXThis()[# const#]
COMPLETION: capturesVariable : [#bool#]capturesVariable(<#const VarDecl *var#>)[# const#]
COMPLETION: castFromDeclContext : [#BlockDecl *#]castFromDeclContext(<#const DeclContext *DC#>)
COMPLETION: castFromDeclContext (Hidden) : [#Decl *#]clang::Decl::castFromDeclContext(<#const DeclContext *#>)
COMPLETION: castToDeclContext : [#DeclContext *#]castToDeclContext(<#const BlockDecl *D#>)
COMPLETION: castToDeclContext (Hidden) : [#DeclContext *#]clang::Decl::castToDeclContext(<#const Decl *#>)
COMPLETION: classof : [#bool#]classof(<#const Decl *D#>)
COMPLETION: classof (Hidden) : [#bool#]clang::DeclContext::classof(<#const Decl *D#>)
COMPLETION: classof (Hidden) : [#bool#]clang::DeclContext::classof(<#const DeclContext *D#>)
COMPLETION: classofKind : [#bool#]classofKind(<#Kind K#>)
COMPLETION: classofKind (Hidden) : [#bool#]clang::Decl::classofKind(<#Kind K#>)
COMPLETION: ClassScopeFunctionSpecialization : [#clang::Decl::Kind#]ClassScopeFunctionSpecialization
COMPLETION: ClassTemplate : [#clang::Decl::Kind#]ClassTemplate
COMPLETION: ClassTemplatePartialSpecialization : [#clang::Decl::Kind#]ClassTemplatePartialSpecialization
COMPLETION: ClassTemplateSpecialization : [#clang::Decl::Kind#]ClassTemplateSpecialization
COMPLETION: collectAllContexts : [#void#]collectAllContexts(<#SmallVectorImpl<DeclContext *> &Contexts#>)
COMPLETION: ConstructorUsingShadow : [#clang::Decl::Kind#]ConstructorUsingShadow
COMPLETION: containsDecl : [#bool#]containsDecl(<#Decl *D#>)[# const#]
COMPLETION: Create : [#BlockDecl *#]Create(<#ASTContext &C#>, <#DeclContext *DC#>, <#SourceLocation L#>)
COMPLETION: CreateDeserialized : [#BlockDecl *#]CreateDeserialized(<#ASTContext &C#>, <#unsigned int ID#>)
COMPLETION: CreateStoredDeclsMap : [#StoredDeclsMap *#]CreateStoredDeclsMap(<#ASTContext &C#>)[# const#]
COMPLETION: CXXConstructor : [#clang::Decl::Kind#]CXXConstructor
COMPLETION: CXXConversion : [#clang::Decl::Kind#]CXXConversion
COMPLETION: CXXDeductionGuide : [#clang::Decl::Kind#]CXXDeductionGuide
COMPLETION: CXXDestructor : [#clang::Decl::Kind#]CXXDestructor
COMPLETION: CXXMethod : [#clang::Decl::Kind#]CXXMethod
COMPLETION: CXXRecord : [#clang::Decl::Kind#]CXXRecord
COMPLETION: ddiag_iterator : ddiag_iterator
COMPLETION: ddiag_range : ddiag_range
COMPLETION: ddiags : [#DeclContext::ddiag_range#]ddiags()[# const#]
COMPLETION: Decl : Decl
COMPLETION: decl_iterator : decl_iterator
COMPLETION: decl_range : decl_range
COMPLETION: DeclContext : DeclContext
COMPLETION: DeclCtx : [#llvm::PointerUnion<DeclContext *, MultipleDC *>#]DeclCtx
COMPLETION: DeclKind : [#unsigned int#]DeclKind
COMPLETION: DeclKind : [#unsigned int#]DeclKind
COMPLETION: decls : [#decl_range#]decls()[# const#]
COMPLETION: decls_begin : [#decl_iterator#]decls_begin()[# const#]
COMPLETION: decls_empty : [#bool#]decls_empty()[# const#]
COMPLETION: decls_end : [#decl_iterator#]decls_end()[# const#]
COMPLETION: Decomposition : [#clang::Decl::Kind#]Decomposition
COMPLETION: dropAttr : [#void#]dropAttr<<#typename T#>>()
COMPLETION: dropAttrs : [#void#]dropAttrs()
COMPLETION: dump : [#void#]dump()[# const#]
COMPLETION: dump : [#void#]dump(<#raw_ostream &Out#>{#, <#bool Deserialize = false#>#})[# const#]
COMPLETION: dumpColor : [#void#]dumpColor()[# const#]
COMPLETION: dumpDeclContext : [#void#]dumpDeclContext()[# const#]
COMPLETION: dumpLookups : [#void#]dumpLookups()[# const#]
COMPLETION: dumpLookups : [#void#]dumpLookups(<#llvm::raw_ostream &OS#>{#, <#bool DumpDecls = false#>{#, <#bool Deserialize = false#>#}#})[# const#]
COMPLETION: Empty : [#clang::Decl::Kind#]Empty
COMPLETION: EmptyShell : EmptyShell
COMPLETION: EnableStatistics : [#void#]EnableStatistics()
COMPLETION: Encloses : [#bool#]Encloses(<#const DeclContext *DC#>)[# const#]
COMPLETION: Enum : [#clang::Decl::Kind#]Enum
COMPLETION: EnumConstant : [#clang::Decl::Kind#]EnumConstant
COMPLETION: Equals : [#bool#]Equals(<#const DeclContext *DC#>)[# const#]
COMPLETION: Export : [#clang::Decl::Kind#]Export
COMPLETION: ExternalLexicalStorage : [#bool#]ExternalLexicalStorage
COMPLETION: ExternalVisibleStorage : [#bool#]ExternalVisibleStorage
COMPLETION: ExternCContext : [#clang::Decl::Kind#]ExternCContext
COMPLETION: Field : [#clang::Decl::Kind#]Field
COMPLETION: FileScopeAsm : [#clang::Decl::Kind#]FileScopeAsm
COMPLETION: filtered_decl_iterator : filtered_decl_iterator<<#typename SpecificDecl#>, <#bool (SpecificDecl::*Acceptable)() const#>>
COMPLETION: firstClassTemplateSpecialization : [#clang::Decl::Kind#]firstClassTemplateSpecialization
COMPLETION: firstCXXMethod : [#clang::Decl::Kind#]firstCXXMethod
COMPLETION: firstCXXRecord : [#clang::Decl::Kind#]firstCXXRecord
COMPLETION: FirstDecl : [#Decl *#]FirstDecl
COMPLETION: firstDecl : [#clang::Decl::Kind#]firstDecl
COMPLETION: firstDeclarator : [#clang::Decl::Kind#]firstDeclarator
COMPLETION: firstField : [#clang::Decl::Kind#]firstField
COMPLETION: firstFunction : [#clang::Decl::Kind#]firstFunction
COMPLETION: firstNamed : [#clang::Decl::Kind#]firstNamed
COMPLETION: firstObjCContainer : [#clang::Decl::Kind#]firstObjCContainer
COMPLETION: firstObjCImpl : [#clang::Decl::Kind#]firstObjCImpl
COMPLETION: firstRecord : [#clang::Decl::Kind#]firstRecord
COMPLETION: firstRedeclarableTemplate : [#clang::Decl::Kind#]firstRedeclarableTemplate
COMPLETION: firstTag : [#clang::Decl::Kind#]firstTag
COMPLETION: firstTemplate : [#clang::Decl::Kind#]firstTemplate
COMPLETION: firstType : [#clang::Decl::Kind#]firstType
COMPLETION: firstTypedefName : [#clang::Decl::Kind#]firstTypedefName
COMPLETION: firstUsingShadow : [#clang::Decl::Kind#]firstUsingShadow
COMPLETION: firstValue : [#clang::Decl::Kind#]firstValue
COMPLETION: firstVar : [#clang::Decl::Kind#]firstVar
COMPLETION: firstVarTemplateSpecialization : [#clang::Decl::Kind#]firstVarTemplateSpecialization
COMPLETION: FOK_Declared : [#clang::Decl::FriendObjectKind#]FOK_Declared
COMPLETION: FOK_None : [#clang::Decl::FriendObjectKind#]FOK_None
COMPLETION: FOK_Undeclared : [#clang::Decl::FriendObjectKind#]FOK_Undeclared
COMPLETION: Friend : [#clang::Decl::Kind#]Friend
COMPLETION: FriendObjectKind : FriendObjectKind
COMPLETION: FriendTemplate : [#clang::Decl::Kind#]FriendTemplate
COMPLETION: FromASTFile : [#unsigned int#]FromASTFile
COMPLETION: Function : [#clang::Decl::Kind#]Function
COMPLETION: FunctionTemplate : [#clang::Decl::Kind#]FunctionTemplate
COMPLETION: getAccess : [#AccessSpecifier#]getAccess()[# const#]
COMPLETION: getAccessUnsafe : [#AccessSpecifier#]getAccessUnsafe()[# const#]
COMPLETION: getAsFunction : [#FunctionDecl *#]getAsFunction()
COMPLETION: getAsFunction : [#const FunctionDecl *#]getAsFunction()[# const#]
COMPLETION: getASTContext : [#ASTContext &#]getASTContext()[# const#]
COMPLETION: getASTMutationListener : [#ASTMutationListener *#]getASTMutationListener()[# const#]
COMPLETION: getAttr : [#T *#]getAttr<<#typename T#>>()[# const#]
COMPLETION: getAttrs : [#AttrVec &#]getAttrs()
COMPLETION: getAttrs : [#const AttrVec &#]getAttrs()[# const#]
COMPLETION: getAvailability : [#AvailabilityResult#]getAvailability({#<#std::string *Message = nullptr#>{#, <#VersionTuple EnclosingVersion = VersionTuple()#>#}#})[# const#]
COMPLETION: getBlockManglingContextDecl : [#Decl *#]getBlockManglingContextDecl()[# const#]
COMPLETION: getBlockManglingNumber : [#unsigned int#]getBlockManglingNumber()[# const#]
COMPLETION: getBody : [#Stmt *#]getBody()[# const#]
COMPLETION: getBody (Hidden) : [#Stmt *#]clang::Decl::getBody()[# const#]
COMPLETION: getBodyRBrace : [#SourceLocation#]getBodyRBrace()[# const#]
COMPLETION: getCachedLinkage : [#Linkage#]getCachedLinkage()[# const#]
COMPLETION: getCanonicalDecl : [#Decl *#]getCanonicalDecl()
COMPLETION: getCanonicalDecl : [#const Decl *#]getCanonicalDecl()[# const#]
COMPLETION: getCaretLocation : [#SourceLocation#]getCaretLocation()[# const#]
COMPLETION: getCompoundBody : [#CompoundStmt *#]getCompoundBody()[# const#]
COMPLETION: getDeclContext : [#DeclContext *#]getDeclContext()
COMPLETION: getDeclContext : [#const DeclContext *#]getDeclContext()[# const#]
COMPLETION: getDeclKind : [#Decl::Kind#]getDeclKind()[# const#]
COMPLETION: getDeclKindName : [#const char *#]getDeclKindName()[# const#]
COMPLETION: getDeclKindName : [#const char *#]getDeclKindName()[# const#]
COMPLETION: getDefiningAttr : [#const Attr *#]getDefiningAttr()[# const#]
COMPLETION: getDescribedTemplate : [#TemplateDecl *#]getDescribedTemplate()[# const#]
COMPLETION: getEnclosingNamespaceContext : [#DeclContext *#]getEnclosingNamespaceContext()
COMPLETION: getEnclosingNamespaceContext : [#const DeclContext *#]getEnclosingNamespaceContext()[# const#]
COMPLETION: getExternalSourceSymbolAttr : [#ExternalSourceSymbolAttr *#]getExternalSourceSymbolAttr()[# const#]
COMPLETION: getExternCContext : [#const LinkageSpecDecl *#]getExternCContext()[# const#]
COMPLETION: getFriendObjectKind : [#FriendObjectKind#]getFriendObjectKind()[# const#]
COMPLETION: getFunctionType : [#const FunctionType *#]getFunctionType({#<#bool BlocksToo = true#>#})[# const#]
COMPLETION: getGlobalID : [#unsigned int#]getGlobalID()[# const#]
COMPLETION: getIdentifierNamespace : [#unsigned int#]getIdentifierNamespace()[# const#]
COMPLETION: getIdentifierNamespaceForKind : [#unsigned int#]getIdentifierNamespaceForKind(<#Kind DK#>)
COMPLETION: getImportedOwningModule : [#Module *#]getImportedOwningModule()[# const#]
COMPLETION: getKind : [#Kind#]getKind()[# const#]
COMPLETION: getLexicalDeclContext : [#DeclContext *#]getLexicalDeclContext()
COMPLETION: getLexicalDeclContext : [#const DeclContext *#]getLexicalDeclContext()[# const#]
COMPLETION: getLexicalParent : [#DeclContext *#]getLexicalParent()
COMPLETION: getLexicalParent : [#const DeclContext *#]getLexicalParent()[# const#]
COMPLETION: getLocalOwningModule : [#Module *#]getLocalOwningModule()[# const#]
COMPLETION: getLocation : [#SourceLocation#]getLocation()[# const#]
COMPLETION: getLocEnd : [#SourceLocation#]getLocEnd()[# const#]
COMPLETION: getLocStart : [#SourceLocation#]getLocStart()[# const#]
COMPLETION: getLookupParent : [#DeclContext *#]getLookupParent()
COMPLETION: getLookupParent : [#const DeclContext *#]getLookupParent()[# const#]
COMPLETION: getLookupPtr : [#StoredDeclsMap *#]getLookupPtr()[# const#]
COMPLETION: getMaxAlignment : [#unsigned int#]getMaxAlignment()[# const#]
COMPLETION: getModuleOwnershipKind : [#ModuleOwnershipKind#]getModuleOwnershipKind()[# const#]
COMPLETION: getModuleOwnershipKindForChildOf : [#ModuleOwnershipKind#]getModuleOwnershipKindForChildOf(<#DeclContext *DC#>)
COMPLETION: getMostRecentDecl : [#Decl *#]getMostRecentDecl()
COMPLETION: getMostRecentDecl : [#const Decl *#]getMostRecentDecl()[# const#]
COMPLETION: getMostRecentDeclImpl : [#Decl *#]getMostRecentDeclImpl()
COMPLETION: getMultipleDC : [#MultipleDC *#]getMultipleDC()[# const#]
COMPLETION: getNextDeclInContext : [#Decl *#]getNextDeclInContext()
COMPLETION: getNextDeclInContext : [#const Decl *#]getNextDeclInContext()[# const#]
COMPLETION: getNextRedeclarationImpl : [#Decl *#]getNextRedeclarationImpl()
COMPLETION: getNonClosureAncestor : [#Decl *#]getNonClosureAncestor()
COMPLETION: getNonClosureAncestor : [#const Decl *#]getNonClosureAncestor()[# const#]
COMPLETION: getNonClosureContext : [#Decl *#]getNonClosureContext()
COMPLETION: getNonClosureContext : [#const Decl *#]getNonClosureContext()[# const#]
COMPLETION: getNumCaptures : [#unsigned int#]getNumCaptures()[# const#]
COMPLETION: getNumParams : [#unsigned int#]getNumParams()[# const#]
COMPLETION: getOuterLexicalRecordContext : [#RecordDecl *#]getOuterLexicalRecordContext()
COMPLETION: getOuterLexicalRecordContext : [#const RecordDecl *#]getOuterLexicalRecordContext()[# const#]
COMPLETION: getOwningModule : [#Module *#]getOwningModule()[# const#]
COMPLETION: getOwningModuleForLinkage : [#Module *#]getOwningModuleForLinkage({#<#bool IgnoreLinkage = false#>#})[# const#]
COMPLETION: getOwningModuleID : [#unsigned int#]getOwningModuleID()[# const#]
COMPLETION: getOwningModuleSlow : [#Module *#]getOwningModuleSlow()[# const#]
COMPLETION: getParamDecl : [#const ParmVarDecl *#]getParamDecl(<#unsigned int i#>)[# const#]
COMPLETION: getParamDecl : [#ParmVarDecl *#]getParamDecl(<#unsigned int i#>)
COMPLETION: getParent : [#DeclContext *#]getParent()
COMPLETION: getParent : [#const DeclContext *#]getParent()[# const#]
COMPLETION: getParentASTContext : [#ASTContext &#]getParentASTContext()[# const#]
COMPLETION: getParentFunctionOrMethod : [#const DeclContext *#]getParentFunctionOrMethod()[# const#]
COMPLETION: getParentFunctionOrMethod : [#DeclContext *#]getParentFunctionOrMethod()
COMPLETION: getPreviousDecl : [#Decl *#]getPreviousDecl()
COMPLETION: getPreviousDecl : [#const Decl *#]getPreviousDecl()[# const#]
COMPLETION: getPreviousDeclImpl : [#Decl *#]getPreviousDeclImpl()
COMPLETION: getPrimaryContext : [#DeclContext *#]getPrimaryContext()
COMPLETION: getPrimaryContext : [#const DeclContext *#]getPrimaryContext()[# const#]
COMPLETION: getRedeclContext : [#DeclContext *#]getRedeclContext()
COMPLETION: getRedeclContext : [#const DeclContext *#]getRedeclContext()[# const#]
COMPLETION: getSemanticDC : [#DeclContext *#]getSemanticDC()[# const#]
COMPLETION: getSignatureAsWritten : [#TypeSourceInfo *#]getSignatureAsWritten()[# const#]
COMPLETION: getSourceRange : [#SourceRange#]getSourceRange()[# const#]
COMPLETION: getSourceRange (Hidden) : [#SourceRange#]clang::Decl::getSourceRange()[# const#]
COMPLETION: getTranslationUnitDecl : [#TranslationUnitDecl *#]getTranslationUnitDecl()
COMPLETION: getTranslationUnitDecl : [#const TranslationUnitDecl *#]getTranslationUnitDecl()[# const#]
COMPLETION: getVersionIntroduced : [#VersionTuple#]getVersionIntroduced()[# const#]
COMPLETION: hasAttr : [#bool#]hasAttr<<#typename T#>>()[# const#]
COMPLETION: HasAttrs : [#unsigned int#]HasAttrs
COMPLETION: hasAttrs : [#bool#]hasAttrs()[# const#]
COMPLETION: hasBody : [#bool#]hasBody()[# const#]
COMPLETION: hasCachedLinkage : [#bool#]hasCachedLinkage()[# const#]
COMPLETION: hasCaptures : [#bool#]hasCaptures()[# const#]
COMPLETION: hasDefiningAttr : [#bool#]hasDefiningAttr()[# const#]
COMPLETION: hasExternalLexicalStorage : [#bool#]hasExternalLexicalStorage()[# const#]
COMPLETION: hasExternalVisibleStorage : [#bool#]hasExternalVisibleStorage()[# const#]
COMPLETION: HasLazyExternalLexicalLookups : [#bool#]HasLazyExternalLexicalLookups
COMPLETION: HasLazyLocalLexicalLookups : [#bool#]HasLazyLocalLexicalLookups
COMPLETION: hasLocalOwningModuleStorage : [#bool#]hasLocalOwningModuleStorage()[# const#]
COMPLETION: hasOwningModule : [#bool#]hasOwningModule()[# const#]
COMPLETION: hasTagIdentifierNamespace : [#bool#]hasTagIdentifierNamespace()[# const#]
COMPLETION: IdentifierNamespace : [#unsigned int#]IdentifierNamespace
COMPLETION: IDNS_Label : [#clang::Decl::IdentifierNamespace#]IDNS_Label
COMPLETION: IDNS_LocalExtern : [#clang::Decl::IdentifierNamespace#]IDNS_LocalExtern
COMPLETION: IDNS_Member : [#clang::Decl::IdentifierNamespace#]IDNS_Member
COMPLETION: IDNS_Namespace : [#clang::Decl::IdentifierNamespace#]IDNS_Namespace
COMPLETION: IDNS_NonMemberOperator : [#clang::Decl::IdentifierNamespace#]IDNS_NonMemberOperator
COMPLETION: IDNS_ObjCProtocol : [#clang::Decl::IdentifierNamespace#]IDNS_ObjCProtocol
COMPLETION: IDNS_OMPReduction : [#clang::Decl::IdentifierNamespace#]IDNS_OMPReduction
COMPLETION: IDNS_Ordinary : [#clang::Decl::IdentifierNamespace#]IDNS_Ordinary
COMPLETION: IDNS_OrdinaryFriend : [#clang::Decl::IdentifierNamespace#]IDNS_OrdinaryFriend
COMPLETION: IDNS_Tag : [#clang::Decl::IdentifierNamespace#]IDNS_Tag
COMPLETION: IDNS_TagFriend : [#clang::Decl::IdentifierNamespace#]IDNS_TagFriend
COMPLETION: IDNS_Type : [#clang::Decl::IdentifierNamespace#]IDNS_Type
COMPLETION: IDNS_Using : [#clang::Decl::IdentifierNamespace#]IDNS_Using
COMPLETION: Implicit : [#unsigned int#]Implicit
COMPLETION: ImplicitParam : [#clang::Decl::Kind#]ImplicitParam
COMPLETION: Import : [#clang::Decl::Kind#]Import
COMPLETION: IndirectField : [#clang::Decl::Kind#]IndirectField
COMPLETION: InEnclosingNamespaceSetOf : [#bool#]InEnclosingNamespaceSetOf(<#const DeclContext *NS#>)[# const#]
COMPLETION: InvalidDecl : [#unsigned int#]InvalidDecl
COMPLETION: isCanonicalDecl : [#bool#]isCanonicalDecl()[# const#]
COMPLETION: isClosure : [#bool#]isClosure()[# const#]
COMPLETION: IsConversionFromLambda : [#bool#]IsConversionFromLambda
COMPLETION: isConversionFromLambda : [#bool#]isConversionFromLambda()[# const#]
COMPLETION: isDeclInLexicalTraversal : [#bool#]isDeclInLexicalTraversal(<#const Decl *D#>)[# const#]
COMPLETION: isDefinedOutsideFunctionOrMethod : [#bool#]isDefinedOutsideFunctionOrMethod()[# const#]
COMPLETION: isDependentContext : [#bool#]isDependentContext()[# const#]
COMPLETION: isDeprecated : [#bool#]isDeprecated({#<#std::string *Message = nullptr#>#})[# const#]
COMPLETION: isExported : [#bool#]isExported()[# const#]
COMPLETION: isExternCContext : [#bool#]isExternCContext()[# const#]
COMPLETION: isExternCXXContext : [#bool#]isExternCXXContext()[# const#]
COMPLETION: isFileContext : [#bool#]isFileContext()[# const#]
COMPLETION: isFirstDecl : [#bool#]isFirstDecl()[# const#]
COMPLETION: isFromASTFile : [#bool#]isFromASTFile()[# const#]
COMPLETION: isFunctionOrFunctionTemplate : [#bool#]isFunctionOrFunctionTemplate()[# const#]
COMPLETION: isFunctionOrMethod : [#bool#]isFunctionOrMethod()[# const#]
COMPLETION: isHidden : [#bool#]isHidden()[# const#]
COMPLETION: isImplicit : [#bool#]isImplicit()[# const#]
COMPLETION: isInAnonymousNamespace : [#bool#]isInAnonymousNamespace()[# const#]
COMPLETION: isInIdentifierNamespace : [#bool#]isInIdentifierNamespace(<#unsigned int NS#>)[# const#]
COMPLETION: isInlineNamespace : [#bool#]isInlineNamespace()[# const#]
COMPLETION: isInSemaDC : [#bool#]isInSemaDC()[# const#]
COMPLETION: isInStdNamespace : [#bool#]isInStdNamespace()[# const#]
COMPLETION: isInvalidDecl : [#bool#]isInvalidDecl()[# const#]
COMPLETION: isLexicallyWithinFunctionOrMethod : [#bool#]isLexicallyWithinFunctionOrMethod()[# const#]
COMPLETION: isLocalExternDecl : [#bool#]isLocalExternDecl()
COMPLETION: isLookupContext : [#bool#]isLookupContext()[# const#]
COMPLETION: isModulePrivate : [#bool#]isModulePrivate()[# const#]
COMPLETION: isNamespace : [#bool#]isNamespace()[# const#]
COMPLETION: isObjCContainer : [#bool#]isObjCContainer()[# const#]
COMPLETION: isOutOfLine : [#bool#]isOutOfLine()[# const#]
COMPLETION: isOutOfSemaDC : [#bool#]isOutOfSemaDC()[# const#]
COMPLETION: isParameterPack : [#bool#]isParameterPack()[# const#]
COMPLETION: isRecord : [#bool#]isRecord()[# const#]
COMPLETION: isReferenced : [#bool#]isReferenced()[# const#]
COMPLETION: isStdNamespace : [#bool#]isStdNamespace()[# const#]
COMPLETION: isTagIdentifierNamespace : [#bool#]isTagIdentifierNamespace(<#unsigned int NS#>)
COMPLETION: isTemplated : [#bool#]isTemplated()[# const#]
COMPLETION: isTemplateDecl : [#bool#]isTemplateDecl()[# const#]
COMPLETION: isTemplateParameter : [#bool#]isTemplateParameter()[# const#]
COMPLETION: isTemplateParameterPack : [#bool#]isTemplateParameterPack()[# const#]
COMPLETION: isThisDeclarationReferenced : [#bool#]isThisDeclarationReferenced()[# const#]
COMPLETION: isTopLevelDeclInObjCContainer : [#bool#]isTopLevelDeclInObjCContainer()[# const#]
COMPLETION: isTranslationUnit : [#bool#]isTranslationUnit()[# const#]
COMPLETION: isTransparentContext : [#bool#]isTransparentContext()[# const#]
COMPLETION: isUnavailable : [#bool#]isUnavailable({#<#std::string *Message = nullptr#>#})[# const#]
COMPLETION: isUsed : [#bool#]isUsed({#<#bool CheckUsedAttr = true#>#})[# const#]
COMPLETION: IsVariadic : [#bool#]IsVariadic
COMPLETION: isVariadic : [#bool#]isVariadic()[# const#]
COMPLETION: isWeakImported : [#bool#]isWeakImported()[# const#]
COMPLETION: Kind : Kind
COMPLETION: Label : [#clang::Decl::Kind#]Label
COMPLETION: lastClassTemplateSpecialization : [#clang::Decl::Kind#]lastClassTemplateSpecialization
COMPLETION: lastCXXMethod : [#clang::Decl::Kind#]lastCXXMethod
COMPLETION: lastCXXRecord : [#clang::Decl::Kind#]lastCXXRecord
COMPLETION: LastDecl : [#Decl *#]LastDecl
COMPLETION: lastDecl : [#clang::Decl::Kind#]lastDecl
COMPLETION: lastDeclarator : [#clang::Decl::Kind#]lastDeclarator
COMPLETION: lastField : [#clang::Decl::Kind#]lastField
COMPLETION: lastFunction : [#clang::Decl::Kind#]lastFunction
COMPLETION: lastNamed : [#clang::Decl::Kind#]lastNamed
COMPLETION: lastObjCContainer : [#clang::Decl::Kind#]lastObjCContainer
COMPLETION: lastObjCImpl : [#clang::Decl::Kind#]lastObjCImpl
COMPLETION: lastRecord : [#clang::Decl::Kind#]lastRecord
COMPLETION: lastRedeclarableTemplate : [#clang::Decl::Kind#]lastRedeclarableTemplate
COMPLETION: lastTag : [#clang::Decl::Kind#]lastTag
COMPLETION: lastTemplate : [#clang::Decl::Kind#]lastTemplate
COMPLETION: lastType : [#clang::Decl::Kind#]lastType
COMPLETION: lastTypedefName : [#clang::Decl::Kind#]lastTypedefName
COMPLETION: lastUsingShadow : [#clang::Decl::Kind#]lastUsingShadow
COMPLETION: lastValue : [#clang::Decl::Kind#]lastValue
COMPLETION: lastVar : [#clang::Decl::Kind#]lastVar
COMPLETION: lastVarTemplateSpecialization : [#clang::Decl::Kind#]lastVarTemplateSpecialization
COMPLETION: LinkageSpec : [#clang::Decl::Kind#]LinkageSpec
COMPLETION: LoadLexicalDeclsFromExternalStorage : [#bool#]LoadLexicalDeclsFromExternalStorage()[# const#]
COMPLETION: Loc : [#SourceLocation#]Loc
COMPLETION: localUncachedLookup : [#void#]localUncachedLookup(<#DeclarationName Name#>, <#SmallVectorImpl<NamedDecl *> &Results#>)
COMPLETION: lookup : [#lookup_result#]lookup(<#DeclarationName Name#>)[# const#]
COMPLETION: lookup_iterator : lookup_iterator
COMPLETION: lookup_result : lookup_result
COMPLETION: LookupPtr : [#StoredDeclsMap *#]LookupPtr
COMPLETION: lookups : [#DeclContext::lookups_range#]lookups()[# const#]
COMPLETION: lookups_begin : [#DeclContext::all_lookups_iterator#]lookups_begin()[# const#]
COMPLETION: lookups_end : [#DeclContext::all_lookups_iterator#]lookups_end()[# const#]
COMPLETION: lookups_range : lookups_range
COMPLETION: makeDeclVisibleInContext : [#void#]makeDeclVisibleInContext(<#NamedDecl *D#>)
COMPLETION: makeDeclVisibleInContextImpl : [#void#]makeDeclVisibleInContextImpl(<#NamedDecl *D#>, <#bool Internal#>)
COMPLETION: makeDeclVisibleInContextInternal : [#void#]makeDeclVisibleInContextInternal(<#NamedDecl *D#>)
COMPLETION: makeDeclVisibleInContextWithFlags : [#void#]makeDeclVisibleInContextWithFlags(<#NamedDecl *D#>, <#bool Internal#>, <#bool Rediscoverable#>)
COMPLETION: ManglingContextDecl : [#Decl *#]ManglingContextDecl
COMPLETION: ManglingNumber : [#unsigned int#]ManglingNumber
COMPLETION: markUsed : [#void#]markUsed(<#ASTContext &C#>)
COMPLETION: ModuleOwnershipKind : ModuleOwnershipKind
COMPLETION: MSProperty : [#clang::Decl::Kind#]MSProperty
COMPLETION: MultipleDC : MultipleDC
COMPLETION: Namespace : [#clang::Decl::Kind#]Namespace
COMPLETION: NamespaceAlias : [#clang::Decl::Kind#]NamespaceAlias
COMPLETION: NeedToReconcileExternalVisibleStorage : [#bool#]NeedToReconcileExternalVisibleStorage
COMPLETION: NextInContextAndBits : [#llvm::PointerIntPair<Decl *, 2, ModuleOwnershipKind>#]NextInContextAndBits
COMPLETION: noload_decls : [#decl_range#]noload_decls()[# const#]
COMPLETION: noload_decls_begin : [#decl_iterator#]noload_decls_begin()[# const#]
COMPLETION: noload_decls_end : [#decl_iterator#]noload_decls_end()[# const#]
COMPLETION: noload_lookup : [#lookup_result#]noload_lookup(<#DeclarationName Name#>)
COMPLETION: noload_lookups : [#DeclContext::lookups_range#]noload_lookups()[# const#]
COMPLETION: noload_lookups_begin : [#DeclContext::all_lookups_iterator#]noload_lookups_begin()[# const#]
COMPLETION: noload_lookups_end : [#DeclContext::all_lookups_iterator#]noload_lookups_end()[# const#]
COMPLETION: NonTypeTemplateParm : [#clang::Decl::Kind#]NonTypeTemplateParm
COMPLETION: NumCaptures : [#unsigned int#]NumCaptures
COMPLETION: NumParams : [#unsigned int#]NumParams
COMPLETION: OBJC_TQ_Bycopy : [#clang::Decl::ObjCDeclQualifier#]OBJC_TQ_Bycopy
COMPLETION: OBJC_TQ_Byref : [#clang::Decl::ObjCDeclQualifier#]OBJC_TQ_Byref
COMPLETION: OBJC_TQ_CSNullability : [#clang::Decl::ObjCDeclQualifier#]OBJC_TQ_CSNullability
COMPLETION: OBJC_TQ_In : [#clang::Decl::ObjCDeclQualifier#]OBJC_TQ_In
COMPLETION: OBJC_TQ_Inout : [#clang::Decl::ObjCDeclQualifier#]OBJC_TQ_Inout
COMPLETION: OBJC_TQ_None : [#clang::Decl::ObjCDeclQualifier#]OBJC_TQ_None
COMPLETION: OBJC_TQ_Oneway : [#clang::Decl::ObjCDeclQualifier#]OBJC_TQ_Oneway
COMPLETION: OBJC_TQ_Out : [#clang::Decl::ObjCDeclQualifier#]OBJC_TQ_Out
COMPLETION: ObjCAtDefsField : [#clang::Decl::Kind#]ObjCAtDefsField
COMPLETION: ObjCCategory : [#clang::Decl::Kind#]ObjCCategory
COMPLETION: ObjCCategoryImpl : [#clang::Decl::Kind#]ObjCCategoryImpl
COMPLETION: ObjCCompatibleAlias : [#clang::Decl::Kind#]ObjCCompatibleAlias
COMPLETION: ObjCDeclQualifier : ObjCDeclQualifier
COMPLETION: ObjCImplementation : [#clang::Decl::Kind#]ObjCImplementation
COMPLETION: ObjCInterface : [#clang::Decl::Kind#]ObjCInterface
COMPLETION: ObjCIvar : [#clang::Decl::Kind#]ObjCIvar
COMPLETION: ObjCMethod : [#clang::Decl::Kind#]ObjCMethod
COMPLETION: ObjCProperty : [#clang::Decl::Kind#]ObjCProperty
COMPLETION: ObjCPropertyImpl : [#clang::Decl::Kind#]ObjCPropertyImpl
COMPLETION: ObjCProtocol : [#clang::Decl::Kind#]ObjCProtocol
COMPLETION: ObjCTypeParam : [#clang::Decl::Kind#]ObjCTypeParam
COMPLETION: OMPCapturedExpr : [#clang::Decl::Kind#]OMPCapturedExpr
COMPLETION: OMPDeclareReduction : [#clang::Decl::Kind#]OMPDeclareReduction
COMPLETION: OMPThreadPrivate : [#clang::Decl::Kind#]OMPThreadPrivate
COMPLETION: operator new : [#void *#]operator new(<#std::size_t Size#>, <#const ASTContext &Ctx#>, <#unsigned int ID#>{#, <#std::size_t Extra = 0#>#})
COMPLETION: operator new : [#void *#]operator new(<#std::size_t Size#>, <#const ASTContext &Ctx#>, <#DeclContext *Parent#>{#, <#std::size_t Extra = 0#>#})
COMPLETION: operator= : [#BlockDecl &#]operator=(<#const BlockDecl &#>)
COMPLETION: operator= : [#BlockDecl &#]operator=(<#BlockDecl &&#>)
COMPLETION: operator= (Hidden) : [#Decl &#]clang::Decl::operator=(<#const Decl &#>)
COMPLETION: operator= (Hidden) : [#DeclContext &#]clang::DeclContext::operator=(<#const DeclContext &#>)
COMPLETION: param_begin : [#param_iterator#]param_begin()
COMPLETION: param_begin : [#param_const_iterator#]param_begin()[# const#]
COMPLETION: param_const_iterator : param_const_iterator
COMPLETION: param_empty : [#bool#]param_empty()[# const#]
COMPLETION: param_end : [#param_iterator#]param_end()
COMPLETION: param_end : [#param_const_iterator#]param_end()[# const#]
COMPLETION: param_iterator : param_iterator
COMPLETION: param_size : [#size_t#]param_size()[# const#]
COMPLETION: parameters : [#ArrayRef<ParmVarDecl *>#]parameters()[# const#]
COMPLETION: parameters : [#MutableArrayRef<ParmVarDecl *>#]parameters()
COMPLETION: ParamInfo : [#ParmVarDecl **#]ParamInfo
COMPLETION: ParmVar : [#clang::Decl::Kind#]ParmVar
COMPLETION: PragmaComment : [#clang::Decl::Kind#]PragmaComment
COMPLETION: PragmaDetectMismatch : [#clang::Decl::Kind#]PragmaDetectMismatch
COMPLETION: print : [#void#]print(<#raw_ostream &Out#>{#, <#unsigned int Indentation = 0#>{#, <#bool PrintInstantiation = false#>#}#})[# const#]
COMPLETION: print : [#void#]print(<#raw_ostream &Out#>, <#const PrintingPolicy &Policy#>{#, <#unsigned int Indentation = 0#>{#, <#bool PrintInstantiation = false#>#}#})[# const#]
COMPLETION: printGroup : [#void#]printGroup(<#Decl **Begin#>, <#unsigned int NumDecls#>, <#raw_ostream &Out#>, <#const PrintingPolicy &Policy#>{#, <#unsigned int Indentation = 0#>#})
COMPLETION: PrintStats : [#void#]PrintStats()
COMPLETION: reconcileExternalVisibleStorage : [#void#]reconcileExternalVisibleStorage()[# const#]
COMPLETION: Record : [#clang::Decl::Kind#]Record
COMPLETION: redecl_iterator : redecl_iterator
COMPLETION: redecl_range : redecl_range
COMPLETION: redecls : [#redecl_range#]redecls()[# const#]
COMPLETION: redecls_begin : [#redecl_iterator#]redecls_begin()[# const#]
COMPLETION: redecls_end : [#redecl_iterator#]redecls_end()[# const#]
COMPLETION: Referenced : [#unsigned int#]Referenced
COMPLETION: removeDecl : [#void#]removeDecl(<#Decl *D#>)
COMPLETION: setAccess : [#void#]setAccess(<#AccessSpecifier AS#>)
COMPLETION: setAttrs : [#void#]setAttrs(<#const AttrVec &Attrs#>)
COMPLETION: setAttrsImpl : [#void#]setAttrsImpl(<#const AttrVec &Attrs#>, <#ASTContext &Ctx#>)
COMPLETION: setBlockMangling : [#void#]setBlockMangling(<#unsigned int Number#>, <#Decl *Ctx#>)
COMPLETION: setBlockMissingReturnType : [#void#]setBlockMissingReturnType(<#bool val#>)
COMPLETION: setBody : [#void#]setBody(<#CompoundStmt *B#>)
COMPLETION: setCachedLinkage : [#void#]setCachedLinkage(<#Linkage L#>)[# const#]
COMPLETION: setCaptures : [#void#]setCaptures(<#ASTContext &Context#>, <#ArrayRef<Capture> Captures#>, <#bool CapturesCXXThis#>)
COMPLETION: setDeclContext : [#void#]setDeclContext(<#DeclContext *DC#>)
COMPLETION: setDeclContextsImpl : [#void#]setDeclContextsImpl(<#DeclContext *SemaDC#>, <#DeclContext *LexicalDC#>, <#ASTContext &Ctx#>)
COMPLETION: setHasExternalLexicalStorage : [#void#]setHasExternalLexicalStorage({#<#bool ES = true#>#})
COMPLETION: setHasExternalVisibleStorage : [#void#]setHasExternalVisibleStorage({#<#bool ES = true#>#})
COMPLETION: setImplicit : [#void#]setImplicit({#<#bool I = true#>#})
COMPLETION: setInvalidDecl : [#void#]setInvalidDecl({#<#bool Invalid = true#>#})
COMPLETION: setIsConversionFromLambda : [#void#]setIsConversionFromLambda(<#bool val#>)
COMPLETION: setIsUsed : [#void#]setIsUsed()
COMPLETION: setIsVariadic : [#void#]setIsVariadic(<#bool value#>)
COMPLETION: setLexicalDeclContext : [#void#]setLexicalDeclContext(<#DeclContext *DC#>)
COMPLETION: setLocalExternDecl : [#void#]setLocalExternDecl()
COMPLETION: setLocalOwningModule : [#void#]setLocalOwningModule(<#Module *M#>)
COMPLETION: setLocation : [#void#]setLocation(<#SourceLocation L#>)
COMPLETION: setModuleOwnershipKind : [#void#]setModuleOwnershipKind(<#ModuleOwnershipKind MOK#>)
COMPLETION: setModulePrivate : [#void#]setModulePrivate()
COMPLETION: setMustBuildLookupTable : [#void#]setMustBuildLookupTable()
COMPLETION: setNonMemberOperator : [#void#]setNonMemberOperator()
COMPLETION: setObjectOfFriendDecl : [#void#]setObjectOfFriendDecl({#<#bool PerformFriendInjection = false#>#})
COMPLETION: setOwningModuleID : [#void#]setOwningModuleID(<#unsigned int ID#>)
COMPLETION: setParams : [#void#]setParams(<#ArrayRef<ParmVarDecl *> NewParamInfo#>)
COMPLETION: setReferenced : [#void#]setReferenced({#<#bool R = true#>#})
COMPLETION: setSignatureAsWritten : [#void#]setSignatureAsWritten(<#TypeSourceInfo *Sig#>)
COMPLETION: setTopLevelDeclInObjCContainer : [#void#]setTopLevelDeclInObjCContainer({#<#bool V = true#>#})
COMPLETION: setUseQualifiedLookup : [#bool#]setUseQualifiedLookup({#<#bool use = true#>#})
COMPLETION: setVisibleDespiteOwningModule : [#void#]setVisibleDespiteOwningModule()
COMPLETION: shouldUseQualifiedLookup : [#bool#]shouldUseQualifiedLookup()[# const#]
COMPLETION: SignatureAsWritten : [#TypeSourceInfo *#]SignatureAsWritten
COMPLETION: specific_attr_begin : [#specific_attr_iterator<T>#]specific_attr_begin<<#typename T#>>()[# const#]
COMPLETION: specific_attr_end : [#specific_attr_iterator<T>#]specific_attr_end<<#typename T#>>()[# const#]
COMPLETION: specific_attrs : [#llvm::iterator_range<specific_attr_iterator<T> >#]specific_attrs<<#typename T#>>()[# const#]
COMPLETION: specific_decl_iterator : specific_decl_iterator<<#typename SpecificDecl#>>
COMPLETION: StaticAssert : [#clang::Decl::Kind#]StaticAssert
COMPLETION: StatisticsEnabled : [#bool#]StatisticsEnabled
COMPLETION: TemplateTemplateParm : [#clang::Decl::Kind#]TemplateTemplateParm
COMPLETION: TemplateTypeParm : [#clang::Decl::Kind#]TemplateTypeParm
COMPLETION: TopLevelDeclInObjCContainer : [#unsigned int#]TopLevelDeclInObjCContainer
COMPLETION: TranslationUnit : [#clang::Decl::Kind#]TranslationUnit
COMPLETION: TypeAlias : [#clang::Decl::Kind#]TypeAlias
COMPLETION: TypeAliasTemplate : [#clang::Decl::Kind#]TypeAliasTemplate
COMPLETION: Typedef : [#clang::Decl::Kind#]Typedef
COMPLETION: udir_iterator : udir_iterator
COMPLETION: udir_iterator_base : udir_iterator_base
COMPLETION: udir_range : udir_range
COMPLETION: UnresolvedUsingTypename : [#clang::Decl::Kind#]UnresolvedUsingTypename
COMPLETION: UnresolvedUsingValue : [#clang::Decl::Kind#]UnresolvedUsingValue
COMPLETION: updateOutOfDate : [#void#]updateOutOfDate(<#IdentifierInfo &II#>)[# const#]
COMPLETION: Used : [#unsigned int#]Used
COMPLETION: UseQualifiedLookup : [#bool#]UseQualifiedLookup
COMPLETION: Using : [#clang::Decl::Kind#]Using
COMPLETION: using_directives : [#udir_range#]using_directives()[# const#]
COMPLETION: UsingDirective : [#clang::Decl::Kind#]UsingDirective
COMPLETION: UsingPack : [#clang::Decl::Kind#]UsingPack
COMPLETION: UsingShadow : [#clang::Decl::Kind#]UsingShadow
COMPLETION: Var : [#clang::Decl::Kind#]Var
COMPLETION: VarTemplate : [#clang::Decl::Kind#]VarTemplate
COMPLETION: VarTemplatePartialSpecialization : [#clang::Decl::Kind#]VarTemplatePartialSpecialization
COMPLETION: VarTemplateSpecialization : [#clang::Decl::Kind#]VarTemplateSpecialization
COMPLETION: ~BlockDecl : [#void#]~BlockDecl()
COMPLETION: ~Decl : [#void#]~Decl()
COMPLETION: ~DeclContext : [#void#]~DeclContext()
